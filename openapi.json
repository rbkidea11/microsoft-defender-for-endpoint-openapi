{
  "openapi": "3.0.3",
  "info": {
    "title": "Microsoft Defender for Endpoint API",
    "description": "Microsoft Defender for Endpoint API provides programmatic access to Microsoft Defender for Endpoint capabilities including machine management, security recommendations, alerts, and threat intelligence.",
    "version": "1.0.0",
    "contact": {
      "name": "Microsoft Defender for Endpoint API Documentation",
      "url": "https://docs.microsoft.com/en-us/microsoft-365/security/defender-endpoint/apis-intro"
    },
    "license": {
      "name": "Microsoft API License",
      "url": "https://docs.microsoft.com/en-us/legal/microsoft-apis/terms-of-use"
    },
    "x-microsoft-docs-commit": "b638ce17d127d2c83d4a7b81531c06fd4372c54c",
    "x-microsoft-docs-date": "2025-07-09T17:07:38Z",
    "x-microsoft-docs-url": "https://github.com/MicrosoftDocs/defender-docs/commit/b638ce17d127d2c83d4a7b81531c06fd4372c54c"
  },
  "servers": [
    {
      "url": "api.securitycenter.microsoft.com",
      "description": "Microsoft Defender for Endpoint API"
    }
  ],
  "security": [
    {
      "oauth2": ["https://api.securitycenter.microsoft.com/.default"]
    }
  ],
  "tags": [
    {
      "name": "AdvancedHunting",
      "description": "Advanced hunting query execution endpoints"
    },
    {
      "name": "Alert",
      "description": "Alert management and retrieval endpoints"
    },
    {
      "name": "Assessment",
      "description": "Export assessment data for vulnerabilities and configurations"
    },
    {
      "name": "AuthenticatedScan",
      "description": "Authenticated scan management and monitoring endpoints"
    },
    {
      "name": "AutomatedInvestigation",
      "description": "Automated investigation management and monitoring endpoints"
    },
    {
      "name": "BrowserExtensions",
      "description": "Browser extensions assessment and permission endpoints"
    },
    {
      "name": "CertificateInventory",
      "description": "Certificate inventory assessment endpoints"
    },
    {
      "name": "DeviceHealth",
      "description": "Device health and antivirus status endpoints"
    },
    {
      "name": "Domain",
      "description": "Domain analysis and investigation endpoints"
    },
    {
      "name": "File",
      "description": "File analysis and investigation endpoints"
    },
    {
      "name": "Indicators",
      "description": "Threat indicators management endpoints"
    },
    {
      "name": "InformationGathering",
      "description": "Information gathering assessment endpoints"
    },
    {
      "name": "LiveResponseLibrary",
      "description": "Live response library file management endpoints"
    },
    {
      "name": "Machine",
      "description": "Machine/device management endpoints"
    },
    {
      "name": "MachineAction",
      "description": "Machine action execution and management endpoints"
    },
    {
      "name": "Recommendation", 
      "description": "Security recommendation endpoints"
    },
    {
      "name": "RemediationActivity",
      "description": "Remediation activity tracking and management endpoints"
    },
    {
      "name": "Score",
      "description": "Security score and exposure assessment endpoints"
    },
    {
      "name": "SecurityBaseline",
      "description": "Security baseline assessment and compliance endpoints"
    },
    {
      "name": "Software",
      "description": "Software inventory and vulnerability management endpoints"
    },
    {
      "name": "User",
      "description": "User-related security analysis endpoints"
    },
    {
      "name": "Vulnerability",
      "description": "Vulnerability assessment and management endpoints"
    }
  ],
  "paths": {
    "/api/advancedqueries/run": {
      "post": {
        "tags": ["AdvancedHunting"],
        "summary": "Run advanced hunting query",
        "description": "Execute a KQL (Kusto Query Language) query for advanced threat hunting. Query data from the last 30 days with up to 100,000 results. Rate limited to 45 calls/minute, 1,500 calls/hour.",
        "operationId": "runAdvancedHuntingQuery",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvancedHuntingQueryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvancedHuntingQueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid query or result size exceeded (max 124MB)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "description": "Rate limit exceeded - Either request count or CPU time limit reached",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines": {
      "get": {
        "tags": ["Machine"],
        "summary": "List machines",
        "description": "Retrieves a collection of machines that have communicated with Microsoft Defender for Endpoint. Supports OData V4 queries.",
        "operationId": "listMachines",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter query. Supported fields: computerDnsName, id, version, deviceValue, aadDeviceId, machineTags, lastSeen, exposureLevel, onboardingStatus, lastIpAddress, healthStatus, osPlatform, riskScore, rbacGroupId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "healthStatus eq 'Active'"
          },
          {
            "name": "$top",
            "in": "query", 
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "No recent machines found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}": {
      "get": {
        "tags": ["Machine"],
        "summary": "Get machine by ID",
        "description": "Retrieves specific machine by its device ID or computer name",
        "operationId": "getMachineById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID or computer name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ODataResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Machine"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "Machine with specified ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/logonusers": {
      "get": {
        "tags": ["Machine"],
        "summary": "Get machine log on users",
        "description": "Retrieves a collection of logged on users on a specific machine",
        "operationId": "getMachineLogonUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/alerts": {
      "get": {
        "tags": ["Machine"],
        "summary": "Get machine related alerts",
        "description": "Retrieves a collection of alerts related to a specific machine",
        "operationId": "getMachineRelatedAlerts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/software": {
      "get": {
        "tags": ["Machine"],
        "summary": "Get installed software",
        "description": "Retrieves a collection of installed software on a specific machine",
        "operationId": "getMachineInstalledSoftware",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/vulnerabilities": {
      "get": {
        "tags": ["Machine"],
        "summary": "Get discovered vulnerabilities",
        "description": "Retrieves a collection of discovered vulnerabilities on a specific machine",
        "operationId": "getMachineVulnerabilities",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/recommendations": {
      "get": {
        "tags": ["Machine"],
        "summary": "Get security recommendations",
        "description": "Retrieves a collection of security recommendations for a specific machine",
        "operationId": "getMachineRecommendations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/recommendations": {
      "get": {
        "tags": ["Recommendation"],
        "summary": "List all recommendations",
        "description": "Retrieves a list of all security recommendations affecting the organization. Supports OData V4 queries.",
        "operationId": "listRecommendations",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter query. Supported fields: id, productName, vendor, recommendedVersion, recommendationCategory, subCategory, severityScore, remediationType, recommendedProgram, recommendedVendor, status",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "status eq 'Active'"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/recommendations/{id}": {
      "get": {
        "tags": ["Recommendation"],
        "summary": "Get recommendation by ID",
        "description": "Retrieves a security recommendation by its ID",
        "operationId": "getRecommendationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recommendation ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "va-_-google-_-chrome"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ODataResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Recommendation"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "Recommendation with specified ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/recommendations/{id}/software": {
      "get": {
        "tags": ["Recommendation"],
        "summary": "Get recommendation software",
        "description": "Retrieves software related to a specific security recommendation",
        "operationId": "getRecommendationSoftware",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recommendation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/recommendations/{id}/machines": {
      "get": {
        "tags": ["Recommendation"],
        "summary": "Get recommendation machines",
        "description": "Retrieves a list of devices associated with the security recommendation",
        "operationId": "getRecommendationMachines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recommendation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineRefCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/recommendations/{id}/vulnerabilities": {
      "get": {
        "tags": ["Recommendation"],
        "summary": "Get recommendation vulnerabilities",
        "description": "Retrieves a list of vulnerabilities associated with the security recommendation",
        "operationId": "getRecommendationVulnerabilities",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recommendation ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/alerts": {
      "get": {
        "tags": ["Alert"],
        "summary": "List alerts",
        "description": "Retrieves a collection of alerts. Supports OData V4 queries including $filter, $top, $skip, and $expand of evidence.",
        "operationId": "listAlerts",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter query. Supported fields: alertCreationTime, lastUpdateTime, incidentId, investigationId, id, assignedTo, detectionSource, lastEventTime, status, severity, category",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "status eq 'New'"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities. Supported: evidence",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "evidence"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": ["Alert"],
        "summary": "Create alert",
        "description": "Create an alert based on event data obtained from Advanced Hunting",
        "operationId": "createAlert",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlertRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Alert created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/alerts/{id}": {
      "get": {
        "tags": ["Alert"],
        "summary": "Get alert by ID",
        "description": "Retrieves a specific alert by its ID",
        "operationId": "getAlertById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Alert ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": ["Alert"],
        "summary": "Update alert",
        "description": "Update specific alert properties",
        "operationId": "updateAlert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Alert ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlertRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alert updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/alerts/batch-update": {
      "post": {
        "tags": ["Alert"],
        "summary": "Batch update alerts",
        "description": "Update a batch of alerts",
        "operationId": "batchUpdateAlerts",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchUpdateAlertsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch update completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpdateResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/alerts/{id}/domains": {
      "get": {
        "tags": ["Alert"],
        "summary": "Get alert related domains",
        "description": "List URLs/domains associated with the alert",
        "operationId": "getAlertRelatedDomains",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Alert ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/alerts/{id}/files": {
      "get": {
        "tags": ["Alert"],
        "summary": "Get alert related files",
        "description": "List the file entities that are associated with the alert",
        "operationId": "getAlertRelatedFiles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Alert ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/alerts/{id}/ips": {
      "get": {
        "tags": ["Alert"],
        "summary": "Get alert related IPs",
        "description": "List IPs that are associated with the alert",
        "operationId": "getAlertRelatedIPs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Alert ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/alerts/{id}/machine": {
      "get": {
        "tags": ["Alert"],
        "summary": "Get alert related machine",
        "description": "The machine that is associated with the alert",
        "operationId": "getAlertRelatedMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Alert ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/alerts/{id}/user": {
      "get": {
        "tags": ["Alert"],
        "summary": "Get alert related user",
        "description": "The user that is associated with the alert",
        "operationId": "getAlertRelatedUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Alert ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/software": {
      "get": {
        "tags": ["Software"],
        "summary": "List software inventory",
        "description": "Retrieves the organization software inventory. Supports OData V4 queries including $filter, $top, and $skip.",
        "operationId": "listSoftware",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter query. Supported fields: id, name, vendor",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "vendor eq 'microsoft'"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/software/{id}": {
      "get": {
        "tags": ["Software"],
        "summary": "Get software by ID",
        "description": "Retrieves software details by ID",
        "operationId": "getSoftwareById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Software ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Software"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/software/{id}/distributions": {
      "get": {
        "tags": ["Software"],
        "summary": "List software version distribution",
        "description": "List software version distribution by software ID",
        "operationId": "getSoftwareVersionDistribution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Software ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareVersionDistributionCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/software/{id}/machineReferences": {
      "get": {
        "tags": ["Software"],
        "summary": "List machines by software",
        "description": "Retrieve a list of devices that are associated with the software ID",
        "operationId": "getMachinesBySoftware",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Software ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineRefCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/software/{id}/vulnerabilities": {
      "get": {
        "tags": ["Software"],
        "summary": "List vulnerabilities by software",
        "description": "Retrieve a list of vulnerabilities associated with the software ID",
        "operationId": "getVulnerabilitiesBySoftware",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Software ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/software/{id}/missingkbs": {
      "get": {
        "tags": ["Software"],
        "summary": "Get missing KBs",
        "description": "Get a list of missing KBs (Knowledge Base articles) associated with the software ID",
        "operationId": "getMissingKBsBySoftware",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Software ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machineactions": {
      "get": {
        "tags": ["MachineAction"],
        "summary": "List Machine Actions",
        "description": "Retrieves a collection of machine actions. Supports OData V4 queries.",
        "operationId": "listMachineActions",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter query. Supported fields: id, status, type, machineId, requestor, creationDateTimeUtc",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "status eq 'Succeeded'"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineActionCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machineactions/{id}": {
      "get": {
        "tags": ["MachineAction"],
        "summary": "Get Machine Action",
        "description": "Retrieves a specific machine action by its ID",
        "operationId": "getMachineActionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine Action ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machineactions/{id}/cancel": {
      "post": {
        "tags": ["MachineAction"],
        "summary": "Cancel machine action",
        "description": "Cancel an active machine action",
        "operationId": "cancelMachineAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine Action ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelMachineActionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Action canceled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/collectInvestigationPackage": {
      "post": {
        "tags": ["MachineAction"],
        "summary": "Collect investigation package",
        "description": "Collect investigation package from a machine",
        "operationId": "collectInvestigationPackage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectInvestigationPackageRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Investigation package collection initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machineactions/{id}/getPackageUri": {
      "get": {
        "tags": ["MachineAction"],
        "summary": "Get investigation package SAS URI",
        "description": "Get URI for downloading the investigation package",
        "operationId": "getInvestigationPackageUri",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine Action ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestigationPackageUri"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machineactions/{id}/GetLiveResponseResultDownloadLink": {
      "get": {
        "tags": ["MachineAction"],
        "summary": "Get live response result",
        "description": "Retrieves specific live response command result download link by its index",
        "operationId": "getLiveResponseResult",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine Action ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Index of the command result",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveResponseResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/isolate": {
      "post": {
        "tags": ["MachineAction"],
        "summary": "Isolate machine",
        "description": "Isolate machine from network",
        "operationId": "isolateMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsolateMachineRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Machine isolation initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/unisolate": {
      "post": {
        "tags": ["MachineAction"],
        "summary": "Release machine from isolation",
        "description": "Release machine from isolation",
        "operationId": "unisolateMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnisolateMachineRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Machine unisolation initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/restrictCodeExecution": {
      "post": {
        "tags": ["MachineAction"],
        "summary": "Restrict app execution",
        "description": "Restrict application execution",
        "operationId": "restrictAppExecution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestrictAppExecutionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "App execution restriction initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/unrestrictCodeExecution": {
      "post": {
        "tags": ["MachineAction"],
        "summary": "Remove app restriction",
        "description": "Remove application execution restriction",
        "operationId": "removeAppRestriction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveAppRestrictionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "App execution restriction removal initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/runAntiVirusScan": {
      "post": {
        "tags": ["MachineAction"],
        "summary": "Run antivirus scan",
        "description": "Run an AV scan using Windows Defender (when applicable)",
        "operationId": "runAntivirusScan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunAntivirusScanRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Antivirus scan initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/runliveresponse": {
      "post": {
        "tags": ["MachineAction"],
        "summary": "Run live response",
        "description": "Runs a sequence of live response commands on a device",
        "operationId": "runLiveResponse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunLiveResponseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Live response initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/offboard": {
      "post": {
        "tags": ["MachineAction"],
        "summary": "Offboard machine",
        "description": "Offboard machine from Microsoft Defender for Endpoint",
        "operationId": "offboardMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OffboardMachineRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Machine offboarding initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/{id}/StopAndQuarantineFile": {
      "post": {
        "tags": ["MachineAction"],
        "summary": "Stop and quarantine file",
        "description": "Stop execution of a file on a machine and delete it",
        "operationId": "stopAndQuarantineFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Machine ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopAndQuarantineFileRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File stop and quarantine initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/vulnerabilities": {
      "get": {
        "tags": ["Vulnerability"],
        "summary": "List vulnerabilities",
        "description": "Retrieves a list of all vulnerabilities affecting the organization. Supports OData V4 queries.",
        "operationId": "listVulnerabilities",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter query. Supported fields: id, name, description, cvssV3, publishedOn, severity, updatedOn",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "severity eq 'Critical'"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 8,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 8000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/vulnerabilities/{id}": {
      "get": {
        "tags": ["Vulnerability"],
        "summary": "Get vulnerability by ID",
        "description": "Retrieves vulnerability information by its ID",
        "operationId": "getVulnerabilityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vulnerability ID (CVE ID)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vulnerability"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/vulnerabilities/{id}/machines": {
      "get": {
        "tags": ["Vulnerability"],
        "summary": "List machines by vulnerability",
        "description": "Retrieve a list of devices that are associated with the vulnerability ID",
        "operationId": "getMachinesByVulnerability",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vulnerability ID (CVE ID)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineRefCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/vulnerabilities/machinesVulnerabilities": {
      "get": {
        "tags": ["Vulnerability"],
        "summary": "List vulnerabilities by machine and software",
        "description": "Retrieves a list of all vulnerabilities affecting the organization per machine and software",
        "operationId": "getVulnerabilitiesByMachineAndSoftware",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter query. Supported fields: machineId, softwareId, softwareName, softwareVendor, softwareVersion, cveId, vulnerabilityName, severity, cvssV3, exposedMachines, publishedOn, updatedOn",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "machineId eq 'machine123'"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineVulnerabilityCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/users/{id}/alerts": {
      "get": {
        "tags": ["User"],
        "summary": "Get user related alerts",
        "description": "Retrieves a collection of alerts related to a given user ID. The ID is not the full UPN, but only the user name (e.g., for user1@contoso.com use user1).",
        "operationId": "getUserRelatedAlerts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User name (not full UPN). For user1@contoso.com, use 'user1'",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "user1"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/users/{id}/machines": {
      "get": {
        "tags": ["User"],
        "summary": "Get user related machines",
        "description": "Retrieves a collection of devices related to a given user ID. The ID is not the full UPN, but only the user name (e.g., for user1@contoso.com use user1).",
        "operationId": "getUserRelatedMachines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User name (not full UPN). For user1@contoso.com, use 'user1'",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "user1"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/baselineComplianceAssessmentByMachine": {
      "get": {
        "tags": ["SecurityBaseline"],
        "summary": "Export security baselines assessment (JSON response)",
        "description": "Returns all security baselines assessments for all devices, on a per-device basis. Returns a table with a separate entry for every unique combination of DeviceId, ProfileId, ConfigurationId.",
        "operationId": "exportSecurityBaselinesAssessmentJson",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results in response (default 50,000, max 200,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50000,
              "maximum": 200000
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of results to return (doesn't return @odata.nextLink)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityBaselineAssessmentCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/BaselineComplianceAssessmentExport": {
      "get": {
        "tags": ["SecurityBaseline"],
        "summary": "Export security baselines assessment (via files)",
        "description": "Returns all security baselines assessments for all devices as download files. Recommended for large organizations with more than 100K devices.",
        "operationId": "exportSecurityBaselinesAssessmentFiles",
        "parameters": [
          {
            "name": "sasValidHours",
            "in": "query",
            "description": "The number of hours that the download URLs are valid for (max 6 hours)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 6,
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityBaselineExportResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/baselineProfiles": {
      "get": {
        "tags": ["SecurityBaseline"],
        "summary": "List security baselines assessment profiles",
        "description": "Retrieves a list of all security baselines assessment profiles created by the organization. Supports OData V4 queries.",
        "operationId": "listSecurityBaselineProfiles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter query. Supported fields: id, name, operatingSystem, operatingSystemVersion, status, settingsNumber, passedDevices, totalDevices",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "operatingSystem eq 'Windows 10'"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityBaselineProfileCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/baselineConfigurations": {
      "get": {
        "tags": ["SecurityBaseline"],
        "summary": "Get baseline profile configurations",
        "description": "Retrieves a list of the configurations being assessed in active baseline profiles. Supports OData V4 queries.",
        "operationId": "getBaselineProfileConfigurations",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter query. Supported fields: id, category, name, cce",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "category eq 'Account Policies'"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityBaselineConfigurationCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/exposureScore": {
      "get": {
        "tags": ["Score"],
        "summary": "Get exposure score",
        "description": "Retrieves the organizational exposure score. The exposure score reflects how vulnerable the organization is to cybersecurity threats.",
        "operationId": "getExposureScore",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureScore"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/configurationScore": {
      "get": {
        "tags": ["Score"],
        "summary": "Get device secure score",
        "description": "Retrieves the organizational device secure score (Microsoft Secure Score for Devices). A higher score means endpoints are more resilient from cybersecurity threat attacks.",
        "operationId": "getDeviceSecureScore",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceSecureScore"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/exposureScore/ByMachineGroups": {
      "get": {
        "tags": ["Score"],
        "summary": "List exposure score by machine group",
        "description": "Retrieves the exposure score for each machine group. Provides granular visibility into security posture by device group.",
        "operationId": "getExposureScoreByMachineGroups",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureScoreByMachineGroup"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/remediationTasks": {
      "get": {
        "tags": ["RemediationActivity"],
        "summary": "List all remediation activities",
        "description": "Returns information about all remediation activities. Supports OData V4 queries for filtering and pagination.",
        "operationId": "listRemediationActivities",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter query. Supported fields: createdOn, status",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "status eq 'Active'"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationActivityCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/remediationTasks/{id}": {
      "get": {
        "tags": ["RemediationActivity"],
        "summary": "Get one remediation activity by ID",
        "description": "Returns information for the specified remediation activity. Presents the same columns as List all remediation activities, but returns results only for the one specified remediation activity.",
        "operationId": "getRemediationActivityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Remediation Activity ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationActivity"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/remediationTasks/{id}/machineReferences": {
      "get": {
        "tags": ["RemediationActivity"],
        "summary": "List exposed devices of one remediation activity",
        "description": "Returns information about exposed devices for the specified remediation activity. Shows which devices are affected by this remediation task.",
        "operationId": "getRemediationActivityExposedDevices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Remediation Activity ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationExposedDeviceCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/libraryfiles": {
      "get": {
        "tags": ["LiveResponseLibrary"],
        "summary": "List library files",
        "description": "List all files in the live response library. These files can be used in live response sessions for investigation and remediation.",
        "operationId": "listLibraryFiles",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveResponseLibraryFileCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": ["LiveResponseLibrary"],
        "summary": "Upload to live response library",
        "description": "Upload a file to the live response library. Files can be scripts, executables, or other tools for use in live response sessions. Maximum file size is 20MB.",
        "operationId": "uploadToLibrary",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadLibraryFileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveResponseLibraryFile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "413": {
            "description": "File too large (max 20MB)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/libraryfiles/{fileName}": {
      "delete": {
        "tags": ["LiveResponseLibrary"],
        "summary": "Delete from library",
        "description": "Delete a file from the live response library. Once deleted, the file will no longer be available for use in live response sessions.",
        "operationId": "deleteFromLibrary",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "description": "Name of the file to delete from the library",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "script1.ps1"
          }
        ],
        "responses": {
          "204": {
            "description": "File deleted successfully"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "File not found in library",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/ips/{ip}/alerts": {
      "get": {
        "tags": ["IP"],
        "summary": "Get IP related alerts",
        "description": "Retrieves a collection of alerts related to a given IP address",
        "operationId": "getIPRelatedAlerts",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "description": "IP address",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/ips/{ip}/stats": {
      "get": {
        "tags": ["IP"],
        "summary": "Get IP statistics",
        "description": "Retrieves the statistics for the given IP address",
        "operationId": "getIPStatistics",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "description": "IP address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lookbackHours",
            "in": "query",
            "description": "Number of hours to look back (max 720 hours/30 days)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 720
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPStatistics"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/machines/SoftwareInventoryByMachine": {
      "get": {
        "tags": ["Assessment"],
        "summary": "Export software inventory assessment (JSON)",
        "description": "Export software inventory assessment per device as JSON response",
        "operationId": "exportSoftwareInventoryAssessmentJson",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "maximum": 200000,
              "default": 50000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInventoryAssessmentCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/machines/SoftwareInventoryExport": {
      "get": {
        "tags": ["Assessment"],
        "summary": "Export software inventory assessment (files)",
        "description": "Export software inventory assessment per device via files",
        "operationId": "exportSoftwareInventoryAssessmentFiles",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportFilesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/machines/NonProductCodeSoftwareInventoryByMachine": {
      "get": {
        "tags": ["Assessment"],
        "summary": "Export non-product code software inventory assessment (JSON)",
        "description": "Export non-CPE software inventory assessment per device",
        "operationId": "exportNonProductCodeSoftwareInventoryJson",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInventoryAssessmentCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/machines/SoftwareVulnerabilitiesByMachine": {
      "get": {
        "tags": ["Assessment"],
        "summary": "Export software vulnerabilities assessment (JSON)",
        "description": "Export software vulnerabilities assessment per device",
        "operationId": "exportSoftwareVulnerabilitiesAssessmentJson",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineVulnerabilityCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/machines/SecureConfigurationsAssessmentByMachine": {
      "get": {
        "tags": ["Assessment"],
        "summary": "Export secure configuration assessment (JSON)",
        "description": "Export secure configuration assessment per device",
        "operationId": "exportSecureConfigurationAssessmentJson",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityBaselineAssessmentCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/scanDefinitions": {
      "get": {
        "tags": ["AuthenticatedScan"],
        "summary": "Get all scan definitions",
        "description": "Retrieve all authenticated scan definitions",
        "operationId": "getAllScanDefinitions",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScanDefinition"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["AuthenticatedScan"],
        "summary": "Add scan definition",
        "description": "Add a new authenticated scan definition",
        "operationId": "addScanDefinition",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanDefinition"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Scan definition created"
          }
        }
      }
    },
    "/api/scanDefinitions/{id}": {
      "put": {
        "tags": ["AuthenticatedScan"],
        "summary": "Update scan definition",
        "description": "Update an authenticated scan definition",
        "operationId": "updateScanDefinition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Scan definition updated"
          }
        }
      },
      "delete": {
        "tags": ["AuthenticatedScan"],
        "summary": "Delete scan definition",
        "description": "Delete an authenticated scan definition",
        "operationId": "deleteScanDefinition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Scan definition deleted"
          }
        }
      }
    },
    "/api/scanAgents": {
      "get": {
        "tags": ["AuthenticatedScan"],
        "summary": "Get all scan agents",
        "description": "Retrieve all authenticated scan agents",
        "operationId": "getAllScanAgents",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScanAgent"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/scanAgents/{id}": {
      "get": {
        "tags": ["AuthenticatedScan"],
        "summary": "Get scan agent by ID",
        "description": "Retrieve authenticated scan agent by ID",
        "operationId": "getScanAgentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanAgent"
                }
              }
            }
          }
        }
      }
    },
    "/api/scanHistory/byDefinition/{definitionId}": {
      "get": {
        "tags": ["AuthenticatedScan"],
        "summary": "Get scan history by definition",
        "description": "Retrieve scan history for a specific definition",
        "operationId": "getScanHistoryByDefinition",
        "parameters": [
          {
            "name": "definitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScanHistory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/scanHistory/bySession/{sessionId}": {
      "get": {
        "tags": ["AuthenticatedScan"],
        "summary": "Get scan history by session",
        "description": "Retrieve scan history for a specific session",
        "operationId": "getScanHistoryBySession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanHistory"
                }
              }
            }
          }
        }
      }
    },
    "/api/machines/BrowserExtensionsAssessmentByMachine": {
      "get": {
        "tags": ["BrowserExtensions"],
        "summary": "Export browser extensions assessment",
        "description": "Export browser extensions assessment per device",
        "operationId": "exportBrowserExtensionsAssessment",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrowserExtensionCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/browserExtensions/{extensionId}/permissions": {
      "get": {
        "tags": ["BrowserExtensions"],
        "summary": "Get browser extensions permission information",
        "description": "Get permission information for a specific browser extension",
        "operationId": "getBrowserExtensionPermissions",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrowserExtension"
                }
              }
            }
          }
        }
      }
    },
    "/api/investigations": {
      "get": {
        "tags": ["AutomatedInvestigation"],
        "summary": "List investigations",
        "description": "Retrieve all automated investigations",
        "operationId": "listInvestigations",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestigationCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/investigations/{id}": {
      "get": {
        "tags": ["AutomatedInvestigation"],
        "summary": "Get investigation",
        "description": "Get investigation by ID",
        "operationId": "getInvestigation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Investigation"
                }
              }
            }
          }
        }
      }
    },
    "/api/machines/{id}/startInvestigation": {
      "post": {
        "tags": ["AutomatedInvestigation"],
        "summary": "Start investigation",
        "description": "Start automated investigation on a machine",
        "operationId": "startInvestigation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartInvestigationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Investigation started",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Investigation"
                }
              }
            }
          }
        }
      }
    },
    "/api/machines/HealthStateByMachine": {
      "get": {
        "tags": ["DeviceHealth"],
        "summary": "Export device health assessment",
        "description": "Export device health assessment per device",
        "operationId": "exportDeviceHealthAssessment",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceHealthCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/machines/AntivirusHealthByMachine": {
      "get": {
        "tags": ["DeviceHealth"],
        "summary": "Export device antivirus health report",
        "description": "Export device antivirus health report per device",
        "operationId": "exportDeviceAntivirusHealthReport",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceHealthCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/machines/CertificateInventoryByMachine": {
      "get": {
        "tags": ["CertificateInventory"],
        "summary": "Export certificate inventory assessment",
        "description": "Export certificate inventory assessment per device",
        "operationId": "exportCertificateInventoryAssessment",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateInventoryCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/{domain}/alerts": {
      "get": {
        "tags": ["Domain"],
        "summary": "Get domain related alerts",
        "description": "Retrieves a collection of alerts related to a given domain",
        "operationId": "getDomainRelatedAlerts",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/{domain}/machines": {
      "get": {
        "tags": ["Domain"],
        "summary": "Get domain related machines",
        "description": "Retrieves a collection of machines related to a given domain",
        "operationId": "getDomainRelatedMachines",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/{domain}/stats": {
      "get": {
        "tags": ["Domain"],
        "summary": "Get domain statistics",
        "description": "Retrieves statistics for the given domain",
        "operationId": "getDomainStatistics",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainStatistics"
                }
              }
            }
          }
        }
      }
    },
    "/api/files/{id}": {
      "get": {
        "tags": ["File"],
        "summary": "Get file information",
        "description": "Retrieve file information by SHA1 hash",
        "operationId": "getFileInformation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SHA1 hash of the file",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/files/{id}/alerts": {
      "get": {
        "tags": ["File"],
        "summary": "Get file related alerts",
        "description": "Retrieves a collection of alerts related to a given file",
        "operationId": "getFileRelatedAlerts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SHA1 hash of the file",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/files/{id}/machines": {
      "get": {
        "tags": ["File"],
        "summary": "Get file related machines",
        "description": "Retrieves a collection of machines related to a given file",
        "operationId": "getFileRelatedMachines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SHA1 hash of the file",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/files/{id}/stats": {
      "get": {
        "tags": ["File"],
        "summary": "Get file statistics",
        "description": "Retrieves statistics for the given file",
        "operationId": "getFileStatistics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SHA1 hash of the file",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileStatistics"
                }
              }
            }
          }
        }
      }
    },
    "/api/indicators": {
      "get": {
        "tags": ["Indicators"],
        "summary": "List indicators",
        "description": "Retrieve all threat indicators",
        "operationId": "listIndicators",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndicatorCollection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Indicators"],
        "summary": "Submit indicator",
        "description": "Submit a new threat indicator",
        "operationId": "submitIndicator",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIndicatorRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Indicator created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Indicator"
                }
              }
            }
          }
        }
      }
    },
    "/api/indicators/import": {
      "post": {
        "tags": ["Indicators"],
        "summary": "Import indicators",
        "description": "Import multiple threat indicators",
        "operationId": "importIndicators",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateIndicatorRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicators imported"
          }
        }
      }
    },
    "/api/indicators/{id}": {
      "delete": {
        "tags": ["Indicators"],
        "summary": "Delete indicator",
        "description": "Delete a threat indicator",
        "operationId": "deleteIndicator",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicator deleted"
          }
        }
      }
    },
    "/api/indicators/batchDelete": {
      "post": {
        "tags": ["Indicators"],
        "summary": "Batch delete indicators",
        "description": "Delete multiple threat indicators",
        "operationId": "batchDeleteIndicators",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteIndicatorsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicators deleted"
          }
        }
      }
    },
    "/api/machines/InformationGatheringAssessmentByMachine": {
      "get": {
        "tags": ["InformationGathering"],
        "summary": "Export information gathering assessment",
        "description": "Export information gathering assessment per device",
        "operationId": "exportInformationGatheringAssessment",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportFilesResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://login.microsoftonline.com/{tenant-id}/oauth2/v2.0/token",
            "scopes": {
              "https://api.securitycenter.microsoft.com/.default": "Access Microsoft Defender for Endpoint API"
            }
          }
        },
        "description": "OAuth2 client credentials flow for application access"
      }
    },
    "schemas": {
      "Alert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Alert ID"
          },
          "title": {
            "type": "string",
            "description": "Alert title"
          },
          "description": {
            "type": "string",
            "description": "Alert description"
          },
          "alertCreationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date and time (in UTC) the alert was created"
          },
          "lastEventTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The last occurrence of the event that triggered the alert on the same device"
          },
          "firstEventTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The first occurrence of the event that triggered the alert on that device"
          },
          "lastUpdateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date and time (in UTC) the alert was last updated"
          },
          "resolvedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date and time in which the status of the alert was changed to Resolved"
          },
          "incidentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "description": "The Incident ID of the Alert"
          },
          "investigationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "description": "The Investigation ID related to the Alert"
          },
          "investigationState": {
            "type": "string",
            "enum": ["Unknown", "Terminated", "SuccessfullyRemediated", "Benign", "Failed", "PartiallyRemediated", "Running", "PendingApproval", "PendingResource", "PartiallyInvestigated", "TerminatedByUser", "TerminatedBySystem", "Queued", "InnerFailure", "PreexistingAlert", "UnsupportedOs", "UnsupportedAlertType", "SuppressedAlert"],
            "nullable": true,
            "description": "The current state of the Investigation"
          },
          "assignedTo": {
            "type": "string",
            "description": "Owner of the alert"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "Role-based access control device group name"
          },
          "mitreTechniques": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Mitre Enterprise technique IDs"
          },
          "relatedUser": {
            "$ref": "#/components/schemas/RelatedUser",
            "description": "Details of user related to a specific alert"
          },
          "severity": {
            "type": "string",
            "enum": ["UnSpecified", "Informational", "Low", "Medium", "High"],
            "description": "Severity of the alert"
          },
          "status": {
            "type": "string",
            "enum": ["Unknown", "New", "InProgress", "Resolved"],
            "description": "Specifies the current status of the alert"
          },
          "classification": {
            "type": "string",
            "enum": ["TruePositive", "Informational, expected activity", "FalsePositive"],
            "nullable": true,
            "description": "Specification of the alert"
          },
          "determination": {
            "type": "string",
            "enum": ["MultiStagedAttack", "MaliciousUserActivity", "CompromisedUser", "Malware", "Phishing", "UnwantedSoftware", "SecurityTesting", "LineOfBusinessApplication", "ConfirmedUserActivity", "Clean", "InsufficientData", "Other"],
            "nullable": true,
            "description": "Specifies the determination of the alert"
          },
          "category": {
            "type": "string",
            "description": "Category of the alert"
          },
          "detectionSource": {
            "type": "string",
            "description": "Detection source"
          },
          "threatFamilyName": {
            "type": "string",
            "description": "Threat family"
          },
          "threatName": {
            "type": "string",
            "description": "Threat name"
          },
          "machineId": {
            "type": "string",
            "description": "ID of a machine entity that is associated with the alert"
          },
          "computerDnsName": {
            "type": "string",
            "description": "Machine fully qualified name"
          },
          "aadTenantId": {
            "type": "string",
            "description": "The Microsoft Entra ID"
          },
          "detectorId": {
            "type": "string",
            "description": "The ID of the detector that triggered the alert"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertComment"
            },
            "description": "Alert comments"
          },
          "evidence": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertEvidence"
            },
            "description": "Evidence related to the alert"
          }
        }
      },
      "RelatedUser": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "User name"
          },
          "domainName": {
            "type": "string",
            "description": "Domain name"
          }
        }
      },
      "AlertComment": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment text"
          },
          "createdBy": {
            "type": "string",
            "description": "User who created the comment"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when comment was created"
          }
        }
      },
      "AlertEvidence": {
        "type": "object",
        "properties": {
          "entityType": {
            "type": "string",
            "description": "Type of evidence entity"
          },
          "evidenceCreationTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when evidence was created"
          },
          "sha1": {
            "type": "string",
            "nullable": true,
            "description": "SHA1 hash"
          },
          "sha256": {
            "type": "string",
            "nullable": true,
            "description": "SHA256 hash"
          },
          "fileName": {
            "type": "string",
            "nullable": true,
            "description": "File name"
          },
          "filePath": {
            "type": "string",
            "nullable": true,
            "description": "File path"
          },
          "processId": {
            "type": "integer",
            "nullable": true,
            "description": "Process ID"
          },
          "processCommandLine": {
            "type": "string",
            "nullable": true,
            "description": "Process command line"
          },
          "processCreationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Process creation time"
          },
          "parentProcessId": {
            "type": "integer",
            "nullable": true,
            "description": "Parent process ID"
          },
          "parentProcessCreationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Parent process creation time"
          },
          "parentProcessFileName": {
            "type": "string",
            "nullable": true,
            "description": "Parent process file name"
          },
          "parentProcessFilePath": {
            "type": "string",
            "nullable": true,
            "description": "Parent process file path"
          },
          "ipAddress": {
            "type": "string",
            "nullable": true,
            "description": "IP address"
          },
          "url": {
            "type": "string",
            "nullable": true,
            "description": "URL"
          },
          "registryKey": {
            "type": "string",
            "nullable": true,
            "description": "Registry key"
          },
          "registryHive": {
            "type": "string",
            "nullable": true,
            "description": "Registry hive"
          },
          "registryValueType": {
            "type": "string",
            "nullable": true,
            "description": "Registry value type"
          },
          "registryValue": {
            "type": "string",
            "nullable": true,
            "description": "Registry value"
          },
          "accountName": {
            "type": "string",
            "nullable": true,
            "description": "Account name"
          },
          "domainName": {
            "type": "string",
            "nullable": true,
            "description": "Domain name"
          },
          "userSid": {
            "type": "string",
            "nullable": true,
            "description": "User SID"
          },
          "aadUserId": {
            "type": "string",
            "nullable": true,
            "description": "Azure AD user ID"
          },
          "userPrincipalName": {
            "type": "string",
            "nullable": true,
            "description": "User principal name"
          },
          "detectionStatus": {
            "type": "string",
            "nullable": true,
            "description": "Detection status"
          }
        }
      },
      "Machine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Machine identity"
          },
          "computerDnsName": {
            "type": "string", 
            "description": "Machine fully qualified name"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time",
            "description": "First date and time where the machine was observed by Microsoft Defender for Endpoint"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time", 
            "description": "Time and date of the last received full device report"
          },
          "osPlatform": {
            "type": "string",
            "description": "Operating system platform"
          },
          "onboardingStatus": {
            "type": "string",
            "enum": ["onboarded", "CanBeOnboarded", "Unsupported", "InsufficientInfo"],
            "description": "Status of machine onboarding"
          },
          "osProcessor": {
            "type": "string",
            "description": "Operating system processor (deprecated, use osArchitecture instead)"
          },
          "version": {
            "type": "string",
            "description": "Operating system Version"
          },
          "osBuild": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "description": "Operating system build number"
          },
          "lastIpAddress": {
            "type": "string",
            "description": "Last IP on local NIC on the machine"
          },
          "lastExternalIpAddress": {
            "type": "string", 
            "description": "Last IP through which the machine accessed the internet"
          },
          "healthStatus": {
            "type": "string",
            "enum": ["Active", "Inactive", "ImpairedCommunication", "NoSensorData", "NoSensorDataImpairedCommunication", "Unknown"],
            "description": "Machine health status"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "Machine group Name"
          },
          "rbacGroupId": {
            "type": "string",
            "description": "Machine group ID"
          },
          "riskScore": {
            "type": "string",
            "enum": ["None", "Informational", "Low", "Medium", "High"],
            "nullable": true,
            "description": "Risk score as evaluated by Microsoft Defender for Endpoint"
          },
          "aadDeviceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Microsoft Entra Device ID (when machine is Microsoft Entra joined)"
          },
          "machineTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Set of machine tags"
          },
          "exposureLevel": {
            "type": "string",
            "enum": ["None", "Low", "Medium", "High"],
            "nullable": true,
            "description": "Exposure level as evaluated by Microsoft Defender for Endpoint"
          },
          "deviceValue": {
            "type": "string",
            "enum": ["Normal", "Low", "High"],
            "nullable": true,
            "description": "The value of the device"
          },
          "ipAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IpAddress"
            },
            "description": "Set of IpAddress objects"
          },
          "osArchitecture": {
            "type": "string",
            "enum": ["32-bit", "64-bit"],
            "description": "Operating system architecture"
          }
        }
      },
      "IpAddress": {
        "type": "object",
        "properties": {
          "ipAddress": {
            "type": "string",
            "description": "IP address"
          },
          "addressType": {
            "type": "string",
            "description": "Type of IP address"
          }
        }
      },
      "Recommendation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Recommendation ID"
          },
          "productName": {
            "type": "string",
            "description": "Related software name"
          },
          "recommendationName": {
            "type": "string",
            "description": "Recommendation name"
          },
          "weaknesses": {
            "type": "integer",
            "format": "int64",
            "description": "Number of discovered vulnerabilities"
          },
          "vendor": {
            "type": "string",
            "description": "Related vendor name"
          },
          "recommendedVersion": {
            "type": "string",
            "description": "Recommended version"
          },
          "recommendedProgram": {
            "type": "string",
            "description": "Recommended program"
          },
          "recommendedVendor": {
            "type": "string",
            "description": "Recommended vendor"
          },
          "recommendationCategory": {
            "type": "string",
            "enum": ["Accounts", "Application", "Network", "OS", "SecurityControls"],
            "description": "Recommendation category"
          },
          "subCategory": {
            "type": "string",
            "description": "Recommendation subcategory"
          },
          "severityScore": {
            "type": "number",
            "format": "double",
            "description": "Potential impact of the configuration to the organization's Microsoft Secure Score for Devices (1-10)"
          },
          "publicExploit": {
            "type": "boolean",
            "description": "Public exploit is available"
          },
          "activeAlert": {
            "type": "boolean",
            "description": "Active alert is associated with this recommendation"
          },
          "associatedThreats": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Threat analytics report is associated with this recommendation"
          },
          "remediationType": {
            "type": "string",
            "enum": ["ConfigurationChange", "Update", "Upgrade", "Uninstall"],
            "description": "Remediation type"
          },
          "status": {
            "type": "string",
            "enum": ["Active", "Exception"],
            "description": "Recommendation exception status"
          },
          "configScoreImpact": {
            "type": "number",
            "format": "double",
            "description": "Microsoft Secure Score for Devices impact"
          },
          "exposureImpact": {
            "type": "number",
            "format": "double",
            "description": "Exposure score impact"
          },
          "totalMachineCount": {
            "type": "integer",
            "format": "int64",
            "description": "Number of installed devices"
          },
          "exposedMachinesCount": {
            "type": "integer",
            "format": "int64",
            "description": "Number of installed devices that are exposed to vulnerabilities"
          },
          "nonProductivityImpactedAssets": {
            "type": "integer",
            "format": "int64",
            "description": "Number of devices that aren't affected"
          },
          "relatedComponent": {
            "type": "string",
            "description": "Related software component"
          },
          "exposedCriticalDevices": {
            "type": "integer",
            "description": "The sum of critical devices in all levels of criticality except 'not critical' for a particular recommendation"
          }
        }
      },
      "ODataResponse": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context"
          },
          "@odata.count": {
            "type": "integer",
            "description": "Total count of items"
          },
          "@odata.nextLink": {
            "type": "string",
            "description": "Link to next page of results"
          }
        }
      },
      "MachineCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          }
        ]
      },
      "RecommendationCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recommendation"
                }
              }
            }
          }
        ]
      },
      "AlertCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          }
        ]
      },
      "CreateAlertRequest": {
        "type": "object",
        "required": ["machineId", "severity", "title", "description", "eventTime", "category", "recommendedAction"],
        "properties": {
          "machineId": {
            "type": "string",
            "description": "ID of the machine on which the event was identified"
          },
          "severity": {
            "type": "string",
            "enum": ["Informational", "Low", "Medium", "High"],
            "description": "Severity of the alert"
          },
          "title": {
            "type": "string",
            "description": "Title for the alert"
          },
          "description": {
            "type": "string",
            "description": "Description of the alert"
          },
          "eventTime": {
            "type": "string",
            "format": "date-time",
            "description": "The precise time of the event as string"
          },
          "category": {
            "type": "string",
            "description": "Category of the alert"
          },
          "recommendedAction": {
            "type": "string",
            "description": "Action recommended to be taken by security analyst when analyzing the alert"
          },
          "reportId": {
            "type": "string",
            "description": "The reportId as received from the Advanced Hunting query"
          }
        }
      },
      "UpdateAlertRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["New", "InProgress", "Resolved"],
            "description": "Specifies the current status of the alert"
          },
          "assignedTo": {
            "type": "string",
            "description": "Owner of the alert"
          },
          "classification": {
            "type": "string",
            "enum": ["TruePositive", "Informational, expected activity", "FalsePositive"],
            "description": "Specification of the alert"
          },
          "determination": {
            "type": "string",
            "enum": ["MultiStagedAttack", "MaliciousUserActivity", "CompromisedUser", "Malware", "Phishing", "UnwantedSoftware", "SecurityTesting", "LineOfBusinessApplication", "ConfirmedUserActivity", "Clean", "InsufficientData", "Other"],
            "description": "Specifies the determination of the alert"
          },
          "comment": {
            "type": "string",
            "description": "Comment to be added to the alert"
          }
        }
      },
      "BatchUpdateAlertsRequest": {
        "type": "object",
        "required": ["alertIds"],
        "properties": {
          "alertIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of alert IDs to update"
          },
          "status": {
            "type": "string",
            "enum": ["New", "InProgress", "Resolved"],
            "description": "Specifies the current status of the alert"
          },
          "assignedTo": {
            "type": "string",
            "description": "Owner of the alert"
          },
          "classification": {
            "type": "string",
            "enum": ["TruePositive", "Informational, expected activity", "FalsePositive"],
            "description": "Specification of the alert"
          },
          "determination": {
            "type": "string",
            "enum": ["MultiStagedAttack", "MaliciousUserActivity", "CompromisedUser", "Malware", "Phishing", "UnwantedSoftware", "SecurityTesting", "LineOfBusinessApplication", "ConfirmedUserActivity", "Clean", "InsufficientData", "Other"],
            "description": "Specifies the determination of the alert"
          },
          "comment": {
            "type": "string",
            "description": "Comment to be added to the alerts"
          }
        }
      },
      "BatchUpdateResponse": {
        "type": "object",
        "properties": {
          "succeeded": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of alert IDs that were successfully updated"
          },
          "failed": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Alert ID that failed to update"
                },
                "error": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            },
            "description": "List of alert IDs that failed to update with error details"
          }
        }
      },
      "DomainCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of domain URLs"
              }
            }
          }
        ]
      },
      "FileCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        ]
      },
      "File": {
        "type": "object",
        "properties": {
          "sha1": {
            "type": "string",
            "description": "SHA1 hash of the file"
          },
          "sha256": {
            "type": "string",
            "description": "SHA256 hash of the file"
          },
          "md5": {
            "type": "string",
            "description": "MD5 hash of the file"
          },
          "globalPrevalence": {
            "type": "integer",
            "description": "Global prevalence of the file"
          },
          "globalFirstObserved": {
            "type": "string",
            "format": "date-time",
            "description": "First time the file was observed globally"
          },
          "globalLastObserved": {
            "type": "string",
            "format": "date-time",
            "description": "Last time the file was observed globally"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Size of the file in bytes"
          },
          "fileType": {
            "type": "string",
            "description": "Type of the file"
          },
          "isPeFile": {
            "type": "boolean",
            "description": "True if the file is a portable executable file"
          },
          "filePublisher": {
            "type": "string",
            "description": "Publisher of the file"
          },
          "fileProductName": {
            "type": "string",
            "description": "Product name of the file"
          },
          "signer": {
            "type": "string",
            "description": "Signer of the file"
          },
          "issuer": {
            "type": "string",
            "description": "Issuer of the file certificate"
          },
          "signerHash": {
            "type": "string",
            "description": "Hash of the signing certificate"
          },
          "isValidCertificate": {
            "type": "boolean",
            "description": "True if the certificate is valid"
          },
          "determinationType": {
            "type": "string",
            "description": "Determination type of the file"
          },
          "determinationValue": {
            "type": "string",
            "description": "Determination value of the file"
          }
        }
      },
      "IPCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of IP addresses"
              }
            }
          }
        ]
      },
      "Software": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Software ID"
          },
          "name": {
            "type": "string",
            "description": "Software name"
          },
          "vendor": {
            "type": "string",
            "description": "Software publisher name"
          },
          "weaknesses": {
            "type": "integer",
            "format": "int64",
            "description": "Number of discovered vulnerabilities"
          },
          "publicExploit": {
            "type": "boolean",
            "description": "Public exploit exists for some of the vulnerabilities"
          },
          "activeAlert": {
            "type": "boolean",
            "description": "Active alert is associated with this software"
          },
          "exposedMachines": {
            "type": "integer",
            "format": "int64",
            "description": "Number of exposed devices"
          },
          "impactScore": {
            "type": "number",
            "format": "double",
            "description": "Exposure score impact of this software"
          }
        }
      },
      "SoftwareCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Software"
                }
              }
            }
          }
        ]
      },
      "SoftwareVersionDistribution": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Software version"
          },
          "installations": {
            "type": "integer",
            "description": "Number of installations of this version"
          },
          "vulnerabilities": {
            "type": "integer",
            "description": "Number of vulnerabilities in this version"
          }
        }
      },
      "SoftwareVersionDistributionCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SoftwareVersionDistribution"
                }
              }
            }
          }
        ]
      },
      "MachineRef": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Machine ID"
          },
          "computerDnsName": {
            "type": "string",
            "description": "Machine fully qualified name"
          },
          "osPlatform": {
            "type": "string",
            "description": "Operating system platform"
          },
          "version": {
            "type": "string",
            "description": "Software version installed on this machine"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Last time the machine was seen"
          }
        }
      },
      "MachineRefCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MachineRef"
                }
              }
            }
          }
        ]
      },
      "Vulnerability": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Vulnerability ID (CVE ID)"
          },
          "name": {
            "type": "string",
            "description": "Vulnerability title"
          },
          "description": {
            "type": "string",
            "description": "Vulnerability description"
          },
          "severity": {
            "type": "string",
            "enum": ["Low", "Medium", "High", "Critical"],
            "description": "Vulnerability severity"
          },
          "cvssV3": {
            "type": "number",
            "format": "double",
            "description": "CVSS v3 score"
          },
          "cvssVector": {
            "type": "string",
            "description": "A compressed textual representation that reflects the values used to derive the score"
          },
          "exposedMachines": {
            "type": "integer",
            "format": "int64",
            "description": "Number of exposed devices"
          },
          "publishedOn": {
            "type": "string",
            "format": "date-time",
            "description": "Date when vulnerability was published"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time",
            "description": "Date when vulnerability was updated"
          },
          "publicExploit": {
            "type": "boolean",
            "description": "Public exploit exists"
          },
          "exploitVerified": {
            "type": "boolean",
            "description": "Exploit is verified to work"
          },
          "exploitInKit": {
            "type": "boolean",
            "description": "Exploit is part of an exploit kit"
          },
          "exploitTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Local privilege escalation", "Denial of service", "Local"]
            },
            "description": "Exploit affect types"
          },
          "exploitUris": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Exploit source URLs"
          },
          "cveSupportability": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Supported", "Not Supported", "SupportedInPremium"]
            },
            "description": "CVE supportability status"
          },
          "epss": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "Represents the probability that a vulnerability will be exploited (0-1)"
          }
        }
      },
      "VulnerabilityCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Vulnerability"
                }
              }
            }
          }
        ]
      },
      "KnowledgeBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Knowledge Base ID"
          },
          "name": {
            "type": "string",
            "description": "Knowledge Base name/title"
          },
          "osBuild": {
            "type": "string",
            "description": "OS build number"
          },
          "productsNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Product names affected"
          },
          "url": {
            "type": "string",
            "description": "URL to the Knowledge Base article"
          },
          "machineMissedOn": {
            "type": "integer",
            "description": "Number of machines missing this KB"
          },
          "cveAddressed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "CVEs addressed by this KB"
          }
        }
      },
      "KnowledgeBaseCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KnowledgeBase"
                }
              }
            }
          }
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID"
          },
          "accountName": {
            "type": "string",
            "description": "Account name of the user"
          },
          "accountDomain": {
            "type": "string",
            "description": "Domain of the user account"
          },
          "accountSid": {
            "type": "string",
            "description": "Security identifier (SID) of the user"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time",
            "description": "First time the user was seen"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Last time the user was seen"
          },
          "mostPrevalentMachineId": {
            "type": "string",
            "description": "ID of the machine where the user is most prevalent"
          },
          "leastPrevalentMachineId": {
            "type": "string",
            "description": "ID of the machine where the user is least prevalent"
          },
          "logonTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Types of logons performed by the user"
          },
          "logOnMachinesCount": {
            "type": "integer",
            "description": "Number of machines the user has logged on to"
          },
          "isDomainAdmin": {
            "type": "boolean",
            "description": "True if the user is a domain administrator"
          },
          "isOnlyNetworkUser": {
            "type": "boolean",
            "description": "True if the user is only a network user"
          }
        }
      },
      "UserCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        ]
      },
      "MachineTagRequest": {
        "type": "object",
        "required": ["Value", "Action"],
        "properties": {
          "Value": {
            "type": "string",
            "description": "Tag value"
          },
          "Action": {
            "type": "string",
            "enum": ["Add", "Remove"],
            "description": "Action to perform (Add or Remove)"
          }
        }
      },
      "MultipleMachineTagRequest": {
        "type": "object",
        "required": ["MachineIds", "Value", "Action"],
        "properties": {
          "MachineIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of machine IDs"
          },
          "Value": {
            "type": "string",
            "description": "Tag value"
          },
          "Action": {
            "type": "string",
            "enum": ["Add", "Remove"],
            "description": "Action to perform (Add or Remove)"
          }
        }
      },
      "SetDeviceValueRequest": {
        "type": "object",
        "required": ["DeviceValue"],
        "properties": {
          "DeviceValue": {
            "type": "string",
            "enum": ["Normal", "Low", "High"],
            "description": "Device value/importance level"
          }
        }
      },
      "UpdateMachineRequest": {
        "type": "object",
        "properties": {
          "machineTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Machine tags"
          }
        }
      },
      "MachineAction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Identity of the Machine Action entity"
          },
          "type": {
            "type": "string",
            "enum": ["RunAntiVirusScan", "Offboard", "LiveResponse", "CollectInvestigationPackage", "Isolate", "Unisolate", "StopAndQuarantineFile", "RestrictCodeExecution", "UnrestrictCodeExecution"],
            "description": "Type of the action"
          },
          "scope": {
            "type": "string",
            "description": "Scope of the action. Full or Selective for Isolation, Quick or Full for antivirus scan"
          },
          "requestor": {
            "type": "string",
            "description": "Identity of the person that executed the action"
          },
          "externalId": {
            "type": "string",
            "description": "Id the customer can submit in the request for custom correlation"
          },
          "requestSource": {
            "type": "string",
            "description": "The name of the user/application that submitted the action"
          },
          "commands": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["PutFile", "RunScript", "GetFile"]
            },
            "description": "Commands to run"
          },
          "cancellationRequestor": {
            "type": "string",
            "description": "Identity of the person that canceled the action"
          },
          "requestorComment": {
            "type": "string",
            "description": "Comment that was written when issuing the action"
          },
          "cancellationComment": {
            "type": "string",
            "description": "Comment that was written when canceling the action"
          },
          "status": {
            "type": "string",
            "enum": ["Pending", "InProgress", "Succeeded", "Failed", "TimeOut", "Cancelled"],
            "description": "Current status of the command"
          },
          "machineId": {
            "type": "string",
            "description": "ID of the machine on which the action was executed"
          },
          "computerDnsName": {
            "type": "string",
            "description": "Name of the machine on which the action was executed"
          },
          "creationDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the action was created"
          },
          "cancellationDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date and time when the action was canceled"
          },
          "lastUpdateDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "The last date and time when the action status was updated"
          },
          "title": {
            "type": "string",
            "description": "Machine action title"
          },
          "relatedFileInfo": {
            "$ref": "#/components/schemas/RelatedFileInfo",
            "nullable": true,
            "description": "Related file information"
          }
        }
      },
      "MachineActionCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          }
        ]
      },
      "RelatedFileInfo": {
        "type": "object",
        "properties": {
          "fileIdentifier": {
            "type": "string",
            "description": "File identifier"
          },
          "fileIdentifierType": {
            "type": "string",
            "enum": ["Sha1", "Sha256", "Md5"],
            "description": "Type of file identifier"
          }
        }
      },
      "IsolateMachineRequest": {
        "type": "object",
        "required": ["Comment", "IsolationType"],
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment to associate with the action"
          },
          "IsolationType": {
            "type": "string",
            "enum": ["Full", "Selective"],
            "description": "Type of isolation"
          }
        }
      },
      "UnisolateMachineRequest": {
        "type": "object",
        "required": ["Comment"],
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment to associate with the action"
          }
        }
      },
      "RestrictAppExecutionRequest": {
        "type": "object",
        "required": ["Comment"],
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment to associate with the action"
          }
        }
      },
      "RemoveAppRestrictionRequest": {
        "type": "object",
        "required": ["Comment"],
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment to associate with the action"
          }
        }
      },
      "RunAntivirusScanRequest": {
        "type": "object",
        "required": ["Comment", "ScanType"],
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment to associate with the action"
          },
          "ScanType": {
            "type": "string",
            "enum": ["Quick", "Full"],
            "description": "Type of antivirus scan"
          }
        }
      },
      "CollectInvestigationPackageRequest": {
        "type": "object",
        "required": ["Comment"],
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment to associate with the action"
          }
        }
      },
      "StopAndQuarantineFileRequest": {
        "type": "object",
        "required": ["Comment", "Sha1"],
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment to associate with the action"
          },
          "Sha1": {
            "type": "string",
            "description": "SHA1 hash of the file to stop and quarantine"
          }
        }
      },
      "RunLiveResponseRequest": {
        "type": "object",
        "required": ["Commands"],
        "properties": {
          "Commands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiveResponseCommand"
            },
            "description": "Array of live response commands to execute"
          },
          "Comment": {
            "type": "string",
            "description": "Comment to associate with the action"
          }
        }
      },
      "LiveResponseCommand": {
        "type": "object",
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["RunScript", "GetFile", "PutFile"],
            "description": "Type of live response command"
          },
          "params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiveResponseCommandParam"
            },
            "description": "Command parameters"
          }
        }
      },
      "LiveResponseCommandParam": {
        "type": "object",
        "required": ["key", "value"],
        "properties": {
          "key": {
            "type": "string",
            "description": "Parameter key"
          },
          "value": {
            "type": "string",
            "description": "Parameter value"
          }
        }
      },
      "OffboardMachineRequest": {
        "type": "object",
        "required": ["Comment"],
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment to associate with the action"
          }
        }
      },
      "CancelMachineActionRequest": {
        "type": "object",
        "required": ["Comment"],
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment explaining why the action is being canceled"
          }
        }
      },
      "LiveResponseResult": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "description": "Index of the command result"
          },
          "commandName": {
            "type": "string",
            "description": "Name of the executed command"
          },
          "hasError": {
            "type": "boolean",
            "description": "Whether the command execution had errors"
          },
          "result": {
            "type": "string",
            "description": "Command execution result"
          }
        }
      },
      "InvestigationPackageUri": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "description": "SAS URI for downloading the investigation package"
          }
        }
      },
      "MachineActionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Action ID"
          },
          "type": {
            "type": "string",
            "description": "Action type"
          },
          "requestor": {
            "type": "string",
            "description": "User who requested the action"
          },
          "requestorComment": {
            "type": "string",
            "description": "Comment provided by requestor"
          },
          "status": {
            "type": "string",
            "enum": ["Pending", "InProgress", "Succeeded", "Failed", "TimeOut", "Cancelled"],
            "description": "Action status"
          },
          "machineId": {
            "type": "string",
            "description": "Machine ID"
          },
          "computerDnsName": {
            "type": "string",
            "description": "Machine DNS name"
          },
          "creationDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Action creation time"
          },
          "lastUpdateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Last update time"
          },
          "relatedFileInfo": {
            "type": "object",
            "description": "Related file information"
          }
        }
      },
      "MachineVulnerability": {
        "type": "object",
        "properties": {
          "machineId": {
            "type": "string",
            "description": "Machine ID"
          },
          "computerDnsName": {
            "type": "string",
            "description": "Machine DNS name"
          },
          "osPlatform": {
            "type": "string",
            "description": "Operating system platform"
          },
          "softwareId": {
            "type": "string",
            "description": "Software ID"
          },
          "softwareName": {
            "type": "string",
            "description": "Software name"
          },
          "softwareVendor": {
            "type": "string",
            "description": "Software vendor"
          },
          "softwareVersion": {
            "type": "string",
            "description": "Software version"
          },
          "cveId": {
            "type": "string",
            "description": "CVE ID"
          },
          "vulnerabilityName": {
            "type": "string",
            "description": "Vulnerability name"
          },
          "severity": {
            "type": "string",
            "enum": ["Low", "Medium", "High", "Critical"],
            "description": "Vulnerability severity"
          },
          "cvssV3": {
            "type": "number",
            "format": "double",
            "description": "CVSS v3 score"
          },
          "exposedMachines": {
            "type": "integer",
            "description": "Number of exposed machines"
          },
          "publishedOn": {
            "type": "string",
            "format": "date-time",
            "description": "Date when vulnerability was published"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time",
            "description": "Date when vulnerability was updated"
          },
          "publicExploit": {
            "type": "boolean",
            "description": "Public exploit exists"
          },
          "exploitVerified": {
            "type": "boolean",
            "description": "Exploit is verified to work"
          },
          "exploitInKit": {
            "type": "boolean",
            "description": "Exploit is part of an exploit kit"
          }
        }
      },
      "MachineVulnerabilityCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MachineVulnerability"
                }
              }
            }
          }
        ]
      },
      "SecurityBaselineAssessment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the record, combination of DeviceId, ProfileId, and ConfigurationId"
          },
          "configurationId": {
            "type": "string",
            "description": "Unique identifier for a specific configuration in the baseline benchmark"
          },
          "profileId": {
            "type": "string",
            "description": "Unique identifier for the profile assessed"
          },
          "deviceId": {
            "type": "string",
            "description": "Unique identifier for the device in the service"
          },
          "deviceName": {
            "type": "string",
            "description": "Fully qualified domain name (FQDN) of the device"
          },
          "isApplicable": {
            "type": "boolean",
            "description": "Indicates whether the configuration is applicable to this device"
          },
          "isCompliant": {
            "type": "boolean",
            "description": "Indicates whether the device is compliant with configuration"
          },
          "osVersion": {
            "type": "string",
            "description": "Specific version of the operating system running on the device"
          },
          "osPlatform": {
            "type": "string",
            "description": "Operating system platform running on the device"
          },
          "rbacGroupId": {
            "type": "integer",
            "description": "The role-based access control (RBAC) group Id"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "The role-based access control (RBAC) group name"
          },
          "dataCollectionTimeOffset": {
            "type": "string",
            "format": "date-time",
            "description": "The time the data was collected from the device"
          },
          "complianceCalculationTimeOffset": {
            "type": "string",
            "format": "date-time",
            "description": "The time the assessment calculation was made"
          },
          "recommendedValue": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Set of expected values for the current device setting to be compliant"
          },
          "currentValue": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Set of detected values found on the device"
          },
          "source": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The registry path or other location used to determine the current device setting"
          }
        }
      },
      "SecurityBaselineAssessmentCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SecurityBaselineAssessment"
                }
              }
            }
          }
        ]
      },
      "SecurityBaselineProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the specific baseline profile"
          },
          "name": {
            "type": "string",
            "description": "The profile name"
          },
          "description": {
            "type": "string",
            "description": "The profile description"
          },
          "benchmark": {
            "type": "string",
            "description": "The profile benchmark"
          },
          "version": {
            "type": "string",
            "description": "The profile version"
          },
          "operatingSystem": {
            "type": "string",
            "description": "The profile applicable operating system"
          },
          "operatingSystemVersion": {
            "type": "string",
            "description": "The profile applicable operating system version"
          },
          "status": {
            "type": "boolean",
            "description": "Indicates whether the profile is active or not"
          },
          "complianceLevel": {
            "type": "string",
            "description": "The compliance level chosen for the profile"
          },
          "settingsNumber": {
            "type": "integer",
            "description": "Number of selected configurations in the profile"
          },
          "createdBy": {
            "type": "string",
            "description": "The user that created this profile"
          },
          "lastUpdatedBy": {
            "type": "string",
            "description": "The last user to modify this profile"
          },
          "createdOnTimeOffset": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the profile was created"
          },
          "lastUpdateTimeOffset": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the profile was last updated"
          },
          "passedDevices": {
            "type": "integer",
            "description": "The number of devices applicable to this profile that are compliant with all configurations"
          },
          "totalDevices": {
            "type": "integer",
            "description": "Number of devices applicable to this profile"
          }
        }
      },
      "SecurityBaselineProfileCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SecurityBaselineProfile"
                }
              }
            }
          }
        ]
      },
      "SecurityBaselineConfiguration": {
        "type": "object",
        "properties": {
          "uniqueId": {
            "type": "string",
            "description": "Identifier for the specific configuration across baseline benchmarks"
          },
          "id": {
            "type": "string",
            "description": "Identifier of the specific configuration in the baseline benchmark"
          },
          "benchmarkName": {
            "type": "string",
            "description": "The name of the benchmark"
          },
          "benchmarkVersion": {
            "type": "string",
            "description": "The version of the benchmark. May contain operating system details"
          },
          "name": {
            "type": "string",
            "description": "The configuration name as it appears in the benchmark"
          },
          "description": {
            "type": "string",
            "description": "The configuration description as it appears in the benchmark"
          },
          "category": {
            "type": "string",
            "description": "The configuration category as it appears in the benchmark"
          },
          "complianceLevels": {
            "type": "string",
            "description": "The compliance level of the benchmark where this configuration appears"
          },
          "cce": {
            "type": "string",
            "description": "The CCE for this configuration as it appears in the benchmark"
          },
          "rationale": {
            "type": "string",
            "description": "The rationale for this configuration as it appears in the benchmark"
          },
          "source": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of the registry paths or other locations used to determine the current device setting"
          },
          "recommendedValue": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of the recommended value for each source"
          },
          "remediation": {
            "type": "string",
            "description": "The recommended steps to remediate"
          },
          "isCustom": {
            "type": "boolean",
            "description": "True if the configuration is customized, false if not"
          }
        }
      },
      "SecurityBaselineConfigurationCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SecurityBaselineConfiguration"
                }
              }
            }
          }
        ]
      },
      "SecurityBaselineExportResponse": {
        "type": "object",
        "properties": {
          "exportFiles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "A list of download URLs for files holding the current snapshot of the organization"
          },
          "generatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the export was generated"
          }
        }
      },
      "Score": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "format": "double",
            "description": "The current score"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time in which the call for this API was made"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "The device group name"
          },
          "rbacGroupId": {
            "type": "string",
            "description": "The device group ID"
          }
        }
      },
      "ExposureScore": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "format": "double",
            "description": "The organizational exposure score"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time in which the call for this API was made"
          }
        }
      },
      "DeviceSecureScore": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "format": "double",
            "description": "The organizational device secure score"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time in which the call for this API was made"
          }
        }
      },
      "ExposureScoreByMachineGroup": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Score"
            },
            "description": "List of exposure scores by device group"
          }
        }
      },
      "RemediationActivity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of this remediation activity"
          },
          "title": {
            "type": "string",
            "description": "Title of this remediation activity"
          },
          "description": {
            "type": "string",
            "description": "Description of this remediation activity"
          },
          "category": {
            "type": "string",
            "enum": ["Software", "Security configuration"],
            "description": "Category of the remediation activity"
          },
          "status": {
            "type": "string",
            "enum": ["Active", "Completed"],
            "description": "Remediation activity status"
          },
          "priority": {
            "type": "string",
            "enum": ["High", "Medium", "Low"],
            "description": "Priority the creator set for this remediation activity"
          },
          "type": {
            "type": "string",
            "description": "Remediation type"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "description": "Time this remediation activity was created"
          },
          "dueOn": {
            "type": "string",
            "format": "date-time",
            "description": "Due date the creator set for this remediation activity"
          },
          "statusLastModifiedOn": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the status field was updated"
          },
          "requesterEmail": {
            "type": "string",
            "description": "Creator email address"
          },
          "requesterId": {
            "type": "string",
            "description": "Creator object ID"
          },
          "requesterNotes": {
            "type": "string",
            "description": "The notes (free text) the creator added for this remediation activity"
          },
          "completerEmail": {
            "type": "string",
            "nullable": true,
            "description": "If the remediation activity was manually completed by someone, this column contains their email"
          },
          "completerId": {
            "type": "string",
            "nullable": true,
            "description": "If the remediation activity was manually completed by someone, this column contains their object ID"
          },
          "completionMethod": {
            "type": "string",
            "enum": ["Automatic", "Manual"],
            "description": "A remediation activity can be completed automatically or manually"
          },
          "targetDevices": {
            "type": "integer",
            "format": "int64",
            "description": "Number of exposed devices that this remediation is applicable to"
          },
          "fixedDevices": {
            "type": "integer",
            "description": "The number of devices that have been fixed"
          },
          "productId": {
            "type": "string",
            "description": "Related product ID"
          },
          "nameId": {
            "type": "string",
            "description": "Related product name"
          },
          "vendorId": {
            "type": "string",
            "description": "Related vendor name"
          },
          "recommendedVersion": {
            "type": "string",
            "nullable": true,
            "description": "Recommended version to update/upgrade to"
          },
          "recommendedVendor": {
            "type": "string",
            "nullable": true,
            "description": "Recommended vendor to upgrade to"
          },
          "recommendedProgram": {
            "type": "string",
            "nullable": true,
            "description": "Recommended program to upgrade to"
          },
          "relatedComponent": {
            "type": "string",
            "description": "Related component of this remediation activity"
          },
          "scid": {
            "type": "string",
            "nullable": true,
            "description": "SCID of the related security recommendation"
          },
          "rbacGroupNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Related device group names"
          },
          "productivityImpactRemediationType": {
            "type": "string",
            "enum": ["AllExposedAssets", "OnlyDevicesWithNoUserImpact"],
            "description": "Selection between all exposed devices or only devices with no user impact"
          }
        }
      },
      "RemediationActivityCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RemediationActivity"
                }
              }
            }
          }
        ]
      },
      "RemediationExposedDevice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Device ID"
          },
          "computerDnsName": {
            "type": "string",
            "description": "Device name"
          },
          "osPlatform": {
            "type": "string",
            "description": "Device operating system"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "Name of the device group this device is associated with"
          }
        }
      },
      "RemediationExposedDeviceCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RemediationExposedDevice"
                }
              }
            }
          }
        ]
      },
      "LiveResponseLibraryFile": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "Name of the file in the library"
          },
          "sha256": {
            "type": "string",
            "description": "SHA256 hash of the file"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description of the file"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the file was uploaded to the library"
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the file was last updated"
          },
          "createdBy": {
            "type": "string",
            "description": "User who uploaded the file"
          },
          "hasParameters": {
            "type": "boolean",
            "description": "Whether the script/file requires parameters"
          },
          "parametersDescription": {
            "type": "string",
            "nullable": true,
            "description": "Description of parameters required for the script to run"
          }
        }
      },
      "LiveResponseLibraryFileCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LiveResponseLibraryFile"
                }
              }
            }
          }
        ]
      },
      "UploadLibraryFileRequest": {
        "type": "object",
        "required": ["file"],
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "The file to be uploaded to live response library (max 20MB)"
          },
          "description": {
            "type": "string",
            "description": "Description of the file"
          },
          "parametersDescription": {
            "type": "string",
            "description": "Parameters required for the script to run"
          },
          "overrideIfExists": {
            "type": "boolean",
            "default": false,
            "description": "Whether to override the file if it already exists"
          }
        }
      },
      "IPStatistics": {
        "type": "object",
        "properties": {
          "orgPrevalence": {
            "type": "integer",
            "description": "Number of devices in organization that communicated with this IP"
          },
          "orgFirstSeen": {
            "type": "string",
            "format": "date-time",
            "description": "First time this IP was seen in the organization"
          },
          "orgLastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Last time this IP was seen in the organization"
          },
          "globalPrevalence": {
            "type": "integer",
            "description": "Global prevalence of this IP"
          },
          "globalFirstObserved": {
            "type": "string",
            "format": "date-time",
            "description": "First time this IP was observed globally"
          },
          "globalLastObserved": {
            "type": "string",
            "format": "date-time",
            "description": "Last time this IP was observed globally"
          }
        }
      },
      "SoftwareInventoryAssessment": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name"
          },
          "softwareVendor": {
            "type": "string",
            "description": "Software vendor"
          },
          "softwareName": {
            "type": "string",
            "description": "Software name"
          },
          "softwareVersion": {
            "type": "string",
            "description": "Software version"
          },
          "numberOfWeaknesses": {
            "type": "integer",
            "description": "Number of vulnerabilities"
          },
          "diskPaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Disk paths where software is installed"
          },
          "registryPaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Registry paths for the software"
          },
          "softwareFirstSeenTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "First time this software was seen on the device"
          }
        }
      },
      "SoftwareInventoryAssessmentCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SoftwareInventoryAssessment"
                }
              }
            }
          }
        ]
      },
      "ExportFilesResponse": {
        "type": "object",
        "properties": {
          "exportFiles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Download URLs for export files"
          },
          "generatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when export was generated"
          }
        }
      },
      "ScanDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Scan definition ID"
          },
          "name": {
            "type": "string",
            "description": "Scan definition name"
          },
          "scanType": {
            "type": "string",
            "description": "Type of scan"
          },
          "intervalInHours": {
            "type": "integer",
            "description": "Scan interval in hours"
          }
        }
      },
      "ScanAgent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Scan agent ID"
          },
          "machineId": {
            "type": "string",
            "description": "Machine ID where agent is installed"
          },
          "version": {
            "type": "string",
            "description": "Agent version"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Last time agent was seen"
          }
        }
      },
      "ScanHistory": {
        "type": "object",
        "properties": {
          "scanId": {
            "type": "string",
            "description": "Scan session ID"
          },
          "definitionId": {
            "type": "string",
            "description": "Scan definition ID"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Scan start time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "Scan end time"
          },
          "status": {
            "type": "string",
            "description": "Scan status"
          }
        }
      },
      "BrowserExtension": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name"
          },
          "browserName": {
            "type": "string",
            "description": "Browser name"
          },
          "extensionId": {
            "type": "string",
            "description": "Extension ID"
          },
          "extensionName": {
            "type": "string",
            "description": "Extension name"
          },
          "extensionVersion": {
            "type": "string",
            "description": "Extension version"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Extension permissions"
          },
          "riskScore": {
            "type": "integer",
            "description": "Risk score of the extension"
          }
        }
      },
      "BrowserExtensionCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BrowserExtension"
                }
              }
            }
          }
        ]
      },
      "Investigation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Investigation ID"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Investigation start time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "Investigation end time"
          },
          "state": {
            "type": "string",
            "enum": ["Unknown", "Terminated", "SuccessfullyRemediated", "Benign", "Failed", "PartiallyRemediated", "Running", "PendingApproval", "PendingResource", "PartiallyInvestigated", "TerminatedByUser", "TerminatedBySystem", "Queued", "InnerFailure", "PreexistingAlert", "UnsupportedOs", "UnsupportedAlertType", "SuppressedAlert"],
            "description": "Investigation state"
          },
          "statusDetails": {
            "type": "string",
            "description": "Investigation status details"
          },
          "machineId": {
            "type": "string",
            "description": "Machine ID where investigation was triggered"
          },
          "computerDnsName": {
            "type": "string",
            "description": "Machine DNS name"
          },
          "triggeringAlertId": {
            "type": "string",
            "description": "Alert ID that triggered the investigation"
          }
        }
      },
      "InvestigationCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Investigation"
                }
              }
            }
          }
        ]
      },
      "StartInvestigationRequest": {
        "type": "object",
        "required": ["Comment"],
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment for the investigation"
          }
        }
      },
      "DeviceHealth": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name"
          },
          "antivirusStatus": {
            "type": "string",
            "description": "Antivirus status"
          },
          "antivirusVersion": {
            "type": "string",
            "description": "Antivirus version"
          },
          "lastScanTime": {
            "type": "string",
            "format": "date-time",
            "description": "Last antivirus scan time"
          },
          "healthStatus": {
            "type": "string",
            "description": "Overall device health status"
          }
        }
      },
      "DeviceHealthCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeviceHealth"
                }
              }
            }
          }
        ]
      },
      "CertificateInventory": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name"
          },
          "certificateThumbprint": {
            "type": "string",
            "description": "Certificate thumbprint"
          },
          "certificateSubject": {
            "type": "string",
            "description": "Certificate subject"
          },
          "certificateIssuer": {
            "type": "string",
            "description": "Certificate issuer"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "description": "Certificate expiration date"
          },
          "certificateStore": {
            "type": "string",
            "description": "Certificate store location"
          }
        }
      },
      "CertificateInventoryCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CertificateInventory"
                }
              }
            }
          }
        ]
      },
      "DomainStatistics": {
        "type": "object",
        "properties": {
          "orgPrevalence": {
            "type": "integer",
            "description": "Number of devices in organization that communicated with this domain"
          },
          "orgFirstSeen": {
            "type": "string",
            "format": "date-time",
            "description": "First time this domain was seen in the organization"
          },
          "orgLastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Last time this domain was seen in the organization"
          }
        }
      },
      "FileInfo": {
        "type": "object",
        "properties": {
          "sha1": {
            "type": "string",
            "description": "SHA1 hash of the file"
          },
          "sha256": {
            "type": "string",
            "description": "SHA256 hash of the file"
          },
          "md5": {
            "type": "string",
            "description": "MD5 hash of the file"
          },
          "globalPrevalence": {
            "type": "integer",
            "description": "Global prevalence of the file"
          },
          "globalFirstObserved": {
            "type": "string",
            "format": "date-time",
            "description": "First time this file was observed globally"
          },
          "globalLastObserved": {
            "type": "string",
            "format": "date-time",
            "description": "Last time this file was observed globally"
          },
          "size": {
            "type": "integer",
            "description": "File size in bytes"
          },
          "fileType": {
            "type": "string",
            "description": "File type"
          },
          "isPeFile": {
            "type": "boolean",
            "description": "Whether the file is a PE file"
          },
          "filePublisher": {
            "type": "string",
            "description": "File publisher"
          },
          "fileProductName": {
            "type": "string",
            "description": "File product name"
          },
          "signer": {
            "type": "string",
            "description": "File signer"
          },
          "issuer": {
            "type": "string",
            "description": "Certificate issuer"
          },
          "signerHash": {
            "type": "string",
            "description": "Signer hash"
          },
          "isValidCertificate": {
            "type": "boolean",
            "description": "Whether the certificate is valid"
          },
          "determinationType": {
            "type": "string",
            "description": "Determination type"
          },
          "determinationValue": {
            "type": "string",
            "description": "Determination value"
          }
        }
      },
      "FileStatistics": {
        "type": "object",
        "properties": {
          "orgPrevalence": {
            "type": "integer",
            "description": "Number of devices in organization that have this file"
          },
          "orgFirstSeen": {
            "type": "string",
            "format": "date-time",
            "description": "First time this file was seen in the organization"
          },
          "orgLastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Last time this file was seen in the organization"
          },
          "globalPrevalence": {
            "type": "integer",
            "description": "Global prevalence of this file"
          },
          "globalFirstObserved": {
            "type": "string",
            "format": "date-time",
            "description": "First time this file was observed globally"
          },
          "globalLastObserved": {
            "type": "string",
            "format": "date-time",
            "description": "Last time this file was observed globally"
          }
        }
      },
      "Indicator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Indicator ID"
          },
          "indicatorValue": {
            "type": "string",
            "description": "The value of the indicator"
          },
          "indicatorType": {
            "type": "string",
            "enum": ["FileSha1", "FileSha256", "IpAddress", "DomainName", "Url"],
            "description": "Type of the indicator"
          },
          "action": {
            "type": "string",
            "enum": ["Alert", "AlertAndBlock", "Allowed"],
            "description": "Action to take when indicator is encountered"
          },
          "title": {
            "type": "string",
            "description": "Indicator title"
          },
          "description": {
            "type": "string",
            "description": "Indicator description"
          },
          "creationTimeDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Time when indicator was created"
          },
          "createdBy": {
            "type": "string",
            "description": "User who created the indicator"
          },
          "lastUpdateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Last time indicator was updated"
          },
          "lastUpdatedBy": {
            "type": "string",
            "description": "User who last updated the indicator"
          },
          "expirationTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when indicator expires"
          },
          "severity": {
            "type": "string",
            "enum": ["Informational", "Low", "Medium", "High"],
            "description": "Indicator severity"
          },
          "recommendedActions": {
            "type": "string",
            "description": "Recommended actions for the indicator"
          },
          "rbacGroupNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "RBAC group names"
          }
        }
      },
      "IndicatorCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Indicator"
                }
              }
            }
          }
        ]
      },
      "CreateIndicatorRequest": {
        "type": "object",
        "required": ["indicatorValue", "indicatorType", "action", "title"],
        "properties": {
          "indicatorValue": {
            "type": "string",
            "description": "The value of the indicator"
          },
          "indicatorType": {
            "type": "string",
            "enum": ["FileSha1", "FileSha256", "IpAddress", "DomainName", "Url"],
            "description": "Type of the indicator"
          },
          "action": {
            "type": "string",
            "enum": ["Alert", "AlertAndBlock", "Allowed"],
            "description": "Action to take when indicator is encountered"
          },
          "title": {
            "type": "string",
            "description": "Indicator title"
          },
          "description": {
            "type": "string",
            "description": "Indicator description"
          },
          "expirationTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when indicator expires"
          },
          "severity": {
            "type": "string",
            "enum": ["Informational", "Low", "Medium", "High"],
            "description": "Indicator severity"
          },
          "recommendedActions": {
            "type": "string",
            "description": "Recommended actions for the indicator"
          }
        }
      },
      "BatchDeleteIndicatorsRequest": {
        "type": "object",
        "required": ["indicatorIds"],
        "properties": {
          "indicatorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of indicator IDs to delete"
          }
        }
      },
      "AdvancedHuntingQueryRequest": {
        "type": "object",
        "required": ["Query"],
        "properties": {
          "Query": {
            "type": "string",
            "description": "The KQL (Kusto Query Language) query to run",
            "example": "DeviceProcessEvents | where InitiatingProcessFileName =~ 'powershell.exe' | limit 10"
          }
        }
      },
      "AdvancedHuntingQueryResponse": {
        "type": "object",
        "properties": {
          "Schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuerySchemaColumn"
            },
            "description": "Schema definition of the query results"
          },
          "Results": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            },
            "description": "Query results data"
          }
        }
      },
      "QuerySchemaColumn": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Column name"
          },
          "Type": {
            "type": "string",
            "description": "Column data type",
            "enum": ["String", "DateTime", "Int32", "Int64", "Boolean", "Double", "Dynamic"]
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Error code"
              },
              "message": {
                "type": "string",
                "description": "Error message"
              }
            }
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "429": {
        "description": "Too Many Requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}
