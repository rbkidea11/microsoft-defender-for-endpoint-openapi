{
  "openapi": "3.0.3",
  "info": {
    "title": "Microsoft Defender for Endpoint API",
    "description": "Microsoft Defender for Endpoint API provides programmatic access to Microsoft Defender for Endpoint capabilities including machine management, security recommendations, alerts, and threat intelligence. This specification has been rebuilt from comprehensive documentation analysis for 100% accuracy.",
    "version": "2.0.0",
    "contact": {
      "name": "Microsoft Defender for Endpoint API Documentation",
      "url": "https://docs.microsoft.com/en-us/microsoft-365/security/defender-endpoint/apis-intro"
    },
    "license": {
      "name": "Microsoft API License",
      "url": "https://docs.microsoft.com/en-us/legal/microsoft-apis/terms-of-use"
    },
    "x-microsoft-docs-commit": "2396f29e7c01cbbc639be84c45e276c115de5f41",
    "x-microsoft-docs-date": "2025-08-06T07:31:11Z",
    "x-microsoft-docs-url": "https://github.com/MicrosoftDocs/defender-docs/commit/2396f29e7c01cbbc639be84c45e276c115de5f41"
  },
  "servers": [
    {
      "url": "https://api.securitycenter.microsoft.com",
      "description": "Microsoft Defender for Endpoint API"
    }
  ],
  "security": [
    {
      "oauth2": [
        "https://api.securitycenter.microsoft.com/.default"
      ]
    }
  ],
  "tags": [
    {
      "name": "AdvancedHunting",
      "description": "Advanced hunting queries using KQL"
    },
    {
      "name": "Alert",
      "description": "Security alert management and investigation"
    },
    {
      "name": "Assessment",
      "description": "Security assessment and vulnerability data export"
    },
    {
      "name": "AuthenticatedScan",
      "description": "Authenticated vulnerability scanning management"
    },
    {
      "name": "AutomatedInvestigation",
      "description": "Automated investigation management"
    },
    {
      "name": "BrowserExtensions",
      "description": "Browser extension inventory and assessment"
    },
    {
      "name": "DeviceHealth",
      "description": "Device health and antivirus status reporting"
    },
    {
      "name": "Domain",
      "description": "Domain analysis and investigation"
    },
    {
      "name": "File",
      "description": "File analysis and investigation"
    },
    {
      "name": "Indicators",
      "description": "Threat intelligence indicator management"
    },
    {
      "name": "IP",
      "description": "IP address analysis and investigation"
    },
    {
      "name": "LiveResponseLibrary",
      "description": "Live response library file management"
    },
    {
      "name": "Machine",
      "description": "Device management and information"
    },
    {
      "name": "MachineAction",
      "description": "Device actions and remediation operations"
    },
    {
      "name": "Recommendation",
      "description": "Security recommendations management"
    },
    {
      "name": "RemediationActivity",
      "description": "Remediation activity tracking"
    },
    {
      "name": "Score",
      "description": "Security scoring and exposure metrics"
    },
    {
      "name": "SecurityBaseline",
      "description": "Security baseline compliance assessment"
    },
    {
      "name": "Software",
      "description": "Software inventory and vulnerability management"
    },
    {
      "name": "User",
      "description": "User-related security information"
    },
    {
      "name": "Vulnerability",
      "description": "Vulnerability management and tracking"
    }
  ],
  "paths": {
    "/api/alerts": {
      "get": {
        "tags": [
          "Alert"
        ],
        "summary": "List alerts with OData V4 support and evidence expansion",
        "description": "Retrieves security alerts with comprehensive filtering, sorting, and pagination through OData V4 queries. Supports expanding evidence data and filtering on 15+ fields including severity, status, category, and detection source.",
        "operationId": "getAlerts",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter query - supports 15+ filterable fields including severity, status, category, detectionSource, assignedTo, alertCreationTime, machineId, and more",
            "schema": {
              "type": "string"
            },
            "example": "severity eq 'High' and status eq 'New'"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000
            },
            "example": 100
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip for pagination",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities. Supported: evidence",
            "schema": {
              "type": "string",
              "enum": [
                "evidence"
              ]
            },
            "example": "evidence"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sort results by specified fields",
            "schema": {
              "type": "string"
            },
            "example": "alertCreationTime desc"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select specific fields to return",
            "schema": {
              "type": "string"
            },
            "example": "id,title,severity,status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with alerts collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/alerts/batchUpdate": {
      "post": {
        "tags": [
          "Alert"
        ],
        "summary": "Batch update multiple alerts",
        "description": "Updates multiple alerts in a single batch operation for status, determination, classification, and assignment. Allows efficient bulk operations on alert collections.",
        "operationId": "batchUpdateAlerts",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchUpdateAlertsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated alerts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpdateAlertsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/alerts/CreateAlertByReference": {
      "post": {
        "tags": [
          "Alert"
        ],
        "summary": "Create new alert from event",
        "description": "Creates a new alert based on an existing event with specified event time, machine ID, and report ID. Useful for creating custom alerts from detected events or external threat intelligence.",
        "operationId": "createAlertByReference",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlertByReferenceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created alert",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/alerts/{id}": {
      "get": {
        "tags": [
          "Alert"
        ],
        "summary": "Get alert information by ID",
        "description": "Retrieves a specific alert by its ID with complete alert details and metadata including investigation state, evidence, and related entities.",
        "operationId": "getAlertById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the alert",
            "schema": {
              "type": "string"
            },
            "example": "da637472900382838869_1364969609"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with alert details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Alert"
        ],
        "summary": "Update alert properties",
        "description": "Updates properties of an existing alert including status, determination, classification, assignedTo, and comments. All fields are optional - include only the fields you want to update.",
        "operationId": "updateAlert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the alert",
            "schema": {
              "type": "string"
            },
            "example": "da637472900382838869_1364969609"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlertRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated alert",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/alerts/{id}/domains": {
      "get": {
        "tags": [
          "Alert"
        ],
        "summary": "Get domains related to alert",
        "description": "Retrieves all domains related to a specific alert for threat investigation and analysis. Useful for understanding network-based threats and malicious domain communications.",
        "operationId": "getAlertRelatedDomains",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the alert",
            "schema": {
              "type": "string"
            },
            "example": "da637472900382838869_1364969609"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with related domains",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/alerts/{id}/files": {
      "get": {
        "tags": [
          "Alert"
        ],
        "summary": "Get files related to alert",
        "description": "Retrieves all files related to a specific alert including file hashes, metadata, and security information. Essential for malware analysis and threat investigation.",
        "operationId": "getAlertRelatedFiles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the alert",
            "schema": {
              "type": "string"
            },
            "example": "da637472900382838869_1364969609"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with related files",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/alerts/{id}/ips": {
      "get": {
        "tags": [
          "Alert"
        ],
        "summary": "Get IP addresses related to alert",
        "description": "Retrieves all IP addresses related to a specific alert for network threat investigation and analysis. Useful for tracking malicious network communications and C2 infrastructure.",
        "operationId": "getAlertRelatedIPs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the alert",
            "schema": {
              "type": "string"
            },
            "example": "da637472900382838869_1364969609"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with related IP addresses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/alerts/{id}/machine": {
      "get": {
        "tags": [
          "Alert"
        ],
        "summary": "Get device related to alert",
        "description": "Retrieves device information related to a specific alert including system details, network configuration, and security status. Essential for understanding the affected device context.",
        "operationId": "getAlertRelatedMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the alert",
            "schema": {
              "type": "string"
            },
            "example": "da637472900382838869_1364969609"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with related machine information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/alerts/{id}/user": {
      "get": {
        "tags": [
          "Alert"
        ],
        "summary": "Get user related to alert",
        "description": "Retrieves user information related to a specific alert including account details, logon history, and security context. Important for understanding user-based threats and compromised accounts.",
        "operationId": "getAlertRelatedUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the alert",
            "schema": {
              "type": "string"
            },
            "example": "da637472900382838869_1364969609"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with related user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "List machines",
        "description": "Retrieves a collection of machines that have communicated with Microsoft Defender for Endpoint cloud with comprehensive OData V4 query support. Essential for device inventory and management operations.",
        "operationId": "getMachines",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter on computerDnsName, id, version, deviceValue, aadDeviceId, machineTags, lastSeen, exposureLevel, onboardingStatus, lastIpAddress, healthStatus, osPlatform, riskScore, rbacGroupId",
            "schema": {
              "type": "string"
            },
            "example": "healthStatus eq 'Active'"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000
            },
            "example": 100
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip for pagination",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with machines collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Get machine by device ID or computer name",
        "description": "Retrieves a specific machine by its device ID or computer name with complete device information and security status. Provides comprehensive device information including security posture.",
        "operationId": "getMachineById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Device ID or computer name",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with machine details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Machine"
        ],
        "summary": "Update machine properties (tags and deviceValue)",
        "description": "Updates properties of an existing machine including tags and device value for enhanced device management and categorization. Only machineTags and deviceValue can be updated.",
        "operationId": "updateMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Machine ID",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMachineRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated machine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{machineId}/setDeviceValue": {
      "post": {
        "tags": [
          "Machine"
        ],
        "summary": "Set device value (Normal/Low/High)",
        "description": "Sets the device value of a specific machine for vulnerability management prioritization and risk assessment. Used for business-context-aware security management and affects exposure score calculations.",
        "operationId": "setDeviceValue",
        "parameters": [
          {
            "name": "machineId",
            "in": "path",
            "required": true,
            "description": "Device ID",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetDeviceValueRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully set device value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{machineId}/getmissingkbs": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Get missing security updates (KBs) by device ID",
        "description": "Retrieves missing security updates (Knowledge Base articles) for a specific device, essential for patch management and vulnerability remediation. Critical for maintaining device security posture.",
        "operationId": "getMissingKBsByMachine",
        "parameters": [
          {
            "name": "machineId",
            "in": "path",
            "required": true,
            "description": "Device ID",
            "schema": {
              "type": "string"
            },
            "example": "2339ad14a01bd0299afb93dfa2550136057bff96"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with missing KBs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingKBCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/tags": {
      "post": {
        "tags": [
          "Machine"
        ],
        "summary": "Add or remove tags for a single machine",
        "description": "Manages tags for a specific machine for device categorization, grouping, and automated workflows. Tags are case-sensitive.",
        "operationId": "addOrRemoveMachineTags",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Machine ID (device identifier)",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineTagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated machine tags",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineTagResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/logonusers": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Get logged on users for a specific device",
        "description": "Retrieves a collection of users who have logged on to a specific device, useful for user activity tracking and security investigations. Essential for user activity analysis and insider threat detection.",
        "operationId": "getMachineLogonUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Device ID",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with logged on users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/alerts": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Get all alerts related to a specific device",
        "description": "Retrieves all alerts related to a specific device for comprehensive device-focused security investigation and analysis. Essential for device-focused incident response and understanding device compromise timeline.",
        "operationId": "getMachineRelatedAlerts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Device ID",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with device-related alerts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{machineId}/recommendations": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Get security recommendations for device",
        "description": "Get security recommendations for a specific device from Threat and Vulnerability Management. Part of Microsoft Defender Vulnerability Management for device-specific security guidance.",
        "operationId": "getMachineRecommendations",
        "parameters": [
          {
            "name": "machineId",
            "in": "path",
            "required": true,
            "description": "Machine ID",
            "schema": {
              "type": "string"
            },
            "example": "e058770379bc199a9c179ce52a23e16fd44fd2ee"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with security recommendations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/find": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Find device by internal IP and timestamp",
        "description": "Finds a device by internal IP address around a specific timestamp (within 16 minutes prior and after). Must be within last 30 days.",
        "operationId": "findMachineByIP",
        "parameters": [
          {
            "name": "timestamp",
            "in": "query",
            "required": true,
            "description": "Timestamp in ISO 8601 format (must be within last 30 days)",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2018-06-19T10:00:00Z"
          },
          {
            "name": "key",
            "in": "query",
            "required": true,
            "description": "Internal IP address to search for",
            "schema": {
              "type": "string"
            },
            "example": "10.0.0.1"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with matching machines",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machineactions": {
      "get": {
        "tags": [
          "MachineAction"
        ],
        "summary": "List machine actions",
        "description": "Retrieves a collection of machine actions with comprehensive OData V4 query support for filtering and pagination. Essential for tracking device remediation activities and security operations.",
        "operationId": "getMachineActions",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter on id, status, machineId, type, requestor, creationDateTimeUtc",
            "schema": {
              "type": "string"
            },
            "example": "status eq 'Succeeded'"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of entries to return (max 10,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000
            },
            "example": 100
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of entries to skip for pagination",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with machine actions collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineActionCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/findbyip": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Find devices by internal IP and timestamp",
        "description": "Finds devices seen with the requested internal IP within 15 minutes prior and after a given timestamp. Timestamp must be within the past 30 days.",
        "operationId": "findMachinesByIP",
        "parameters": [
          {
            "name": "ip",
            "in": "query",
            "required": true,
            "description": "Internal IP address to search for",
            "schema": {
              "type": "string"
            },
            "example": "10.248.240.38"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": true,
            "description": "Timestamp in ISO 8601 format (must be within past 30 days)",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2019-09-22T08:44:05Z"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with matching machines",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/findbytag": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Find devices by tag with optional starts-with filter",
        "description": "Finds devices by tag name with optional starts-with filtering for partial tag matching. Response filtered by user's device group access for delegated permissions.",
        "operationId": "findMachinesByTag",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "required": true,
            "description": "The tag name to search for",
            "schema": {
              "type": "string"
            },
            "example": "testTag"
          },
          {
            "name": "useStartsWithFilter",
            "in": "query",
            "required": false,
            "description": "When true, finds devices with tag names that start with the given tag (default: false)",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with matching machines",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/AddOrRemoveTagForMultipleMachines": {
      "post": {
        "tags": [
          "Machine"
        ],
        "summary": "Add or remove tags for multiple machines",
        "description": "Manages tags for multiple machines in a single operation (up to 500 machines). For bulk tag management operations across device fleet.",
        "operationId": "addOrRemoveTagForMultipleMachines",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleMachineTagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated machine tags",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleMachineTagResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machineactions/{id}": {
      "get": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Get machine action by ID",
        "description": "Retrieves a specific machine action by its ID with complete action details and status information. Essential for tracking individual remediation action progress.",
        "operationId": "getMachineActionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Machine action ID",
            "schema": {
              "type": "string"
            },
            "example": "2e9da30d-27f6-4208-81f2-9cd3d67893ba"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with machine action details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machineactions/{machineactionid}/cancel": {
      "post": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Cancel an already launched machine action",
        "description": "Cancels a machine action that is currently in progress or pending execution. Only actions in 'Pending' or 'InProgress' status can be cancelled.",
        "operationId": "cancelMachineAction",
        "parameters": [
          {
            "name": "machineactionid",
            "in": "path",
            "required": true,
            "description": "Machine action ID to cancel",
            "schema": {
              "type": "string"
            },
            "example": "5382f7ea-7557-4ab7-9782-d50480024a4e"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelMachineActionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully cancelled machine action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/collectInvestigationPackage": {
      "post": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Collect forensics investigation package from device",
        "description": "Collects a forensics investigation package from a device for detailed security analysis. Essential for forensic investigations and incident response.",
        "operationId": "collectInvestigationPackage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Machine ID to collect investigation package from",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineActionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Investigation package collection initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/isolate": {
      "post": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Isolate device from network",
        "description": "Isolates a device from accessing external network with support for Full, Selective, or UnManagedDevice isolation types. Critical for containing security threats. Requires 'Active remediation actions' role for delegated access.",
        "operationId": "isolateMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Device ID",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsolateMachineRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Machine isolation initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/unisolate": {
      "post": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Release device from isolation",
        "description": "Releases a device from network isolation, undoing the isolation action and restoring normal network connectivity. Requires 'Active remediation actions' role for delegated access.",
        "operationId": "unisolateMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Device ID",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineActionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Machine unisolation initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/runAntiVirusScan": {
      "post": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Run antivirus scan on device",
        "description": "Initiates Microsoft Defender Antivirus scan on a device with support for Quick or Full scan types. Works alongside other antivirus solutions. Requires 'Active remediation actions' role for delegated access.",
        "operationId": "runAntiVirusScan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Device ID",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunAntiVirusScanRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Antivirus scan initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/StopAndQuarantineFile": {
      "post": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Stop execution and quarantine file by SHA1",
        "description": "Stops execution of a file on a device and quarantines it, removing the threat from the system. Essential for immediate threat containment and malware removal. Requires 'Active remediation actions' role for delegated access.",
        "operationId": "stopAndQuarantineFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Device ID",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopAndQuarantineFileRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File stop and quarantine initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/restrictCodeExecution": {
      "post": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Restrict app execution on device",
        "description": "Restricts execution of all applications on the device except a predefined set, using Windows Defender Application Control policies. Essential for containing potential threats by limiting executable code. Requires 'Active remediation actions' role for delegated access.",
        "operationId": "restrictCodeExecution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Device ID",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineActionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Code execution restriction initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/unrestrictCodeExecution": {
      "post": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Remove app execution restriction from device",
        "description": "Removes application execution restrictions from a device, enabling execution of any application after previous code execution restrictions. Essential for restoring normal device operation after threat containment. Requires 'Active remediation actions' role for delegated access.",
        "operationId": "unrestrictCodeExecution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Device ID",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineActionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Code execution unrestriction initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/offboard": {
      "post": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Offboard device from Defender for Endpoint",
        "description": "Offboards a device from Microsoft Defender for Endpoint, stopping the sensor service but not removing registry information. Windows only (not macOS/Linux). Requires appropriate role assignment for delegated access.",
        "operationId": "offboardMachine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Device ID (40-digit alphanumeric identifier)",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F0-9]{40}$"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineActionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Machine offboarding initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/runliveresponse": {
      "post": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Run live response commands on device",
        "description": "Run live response commands on device including PutFile, RunScript, and GetFile operations. Commands are executed sequentially. Use GetLiveResponseResultDownloadLink to retrieve results.",
        "operationId": "runLiveResponse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Machine ID",
            "schema": {
              "type": "string"
            },
            "example": "f70f9fe6b29cd9511652434919c6530618f06606"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LiveResponseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Live response session initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveResponseAction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machineactions/{id}/GetLiveResponseResultDownloadLink": {
      "get": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Get live response command result download link",
        "description": "Retrieves a specific live response command result by its index, returning a download link valid for 30 minutes. Should be used immediately for downloading to local storage.",
        "operationId": "getLiveResponseResult",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Machine action ID",
            "schema": {
              "type": "string"
            },
            "example": "988cc94e-7a8f-4b28-ab65-54970c5d5018"
          },
          {
            "name": "index",
            "in": "query",
            "required": true,
            "description": "Index of the command result to retrieve",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Download link for live response command result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveResponseDownloadLink"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machineactions/{id}/getPackageUri": {
      "get": {
        "tags": [
          "MachineAction"
        ],
        "summary": "Get SAS URI for investigation package download",
        "description": "Get a URI that allows downloading of an investigation package. The link is valid for a short time and should be used immediately. Only available for Windows 10 version 1703+ and Windows 11.",
        "operationId": "getPackageSasUri",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Machine action ID",
            "schema": {
              "type": "string"
            },
            "example": "7327b54fd718525cbca07dacde913b5ac3c85673"
          }
        ],
        "responses": {
          "200": {
            "description": "SAS URI for investigation package download",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDownloadUri"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/files/{id}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Get file information by identifier",
        "description": "Retrieves file information by identifier (SHA1, SHA256, or MD5) including metadata, prevalence, and security details. Useful for file reputation analysis and threat investigation. Requires 'View Data' role permission for delegated access.",
        "operationId": "getFileInformation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "File identifier (SHA1, SHA256, or MD5 hash)",
            "schema": {
              "type": "string"
            },
            "example": "4388963aaa83afe2042a46a3c017ad50bdcdafb3"
          }
        ],
        "responses": {
          "200": {
            "description": "File information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/files/{id}/alerts": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Get alerts related to file hash",
        "description": "Retrieves a collection of alerts related to a given file hash for threat investigation and analysis. Only SHA-1 hash function is supported. Requires 'View Data' role permission for delegated access.",
        "operationId": "getFileRelatedAlerts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "File hash identifier (SHA-1 only)",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F0-9]{40}$"
            },
            "example": "4388963aaa83afe2042a46a3c017ad50bdcdafb3"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of alerts related to the file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/files/{id}/machines": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Get machines related to file hash",
        "description": "Retrieves a collection of machines related to a given file hash for threat investigation and lateral movement analysis. Only SHA-1 hash function is supported. Requires 'View Data' role permission for delegated access.",
        "operationId": "getFileRelatedMachines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "File hash identifier (SHA-1 only)",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F0-9]{40}$"
            },
            "example": "4388963aaa83afe2042a46a3c017ad50bdcdafb3"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of machines related to the file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/files/{id}/stats": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Get file statistics",
        "description": "Retrieves statistics for a given file including organizational prevalence and temporal information. Provides organizational context for file analysis. Requires 'View Data' role permission for delegated access.",
        "operationId": "getFileStatistics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "File hash identifier",
            "schema": {
              "type": "string"
            },
            "example": "4388963aaa83afe2042a46a3c017ad50bdcdafb3"
          },
          {
            "name": "lookBackHours",
            "in": "query",
            "required": false,
            "description": "Hours to search back for statistics (default 30 days, max 720 hours/30 days)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 720,
              "default": 720
            },
            "example": 48
          }
        ],
        "responses": {
          "200": {
            "description": "File statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileStatistics"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/users/{id}/alerts": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get alerts related to user ID",
        "description": "Retrieves a collection of alerts related to a given user ID for user-focused security investigation and analysis. ID parameter is username only, not full UPN. Essential for user behavior analysis and insider threat detection.",
        "operationId": "getUserRelatedAlerts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Username only (not full UPN) - e.g., 'user1' for user1@contoso.com",
            "schema": {
              "type": "string"
            },
            "example": "user1"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of alerts related to the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/users/{id}/machines": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get devices related to user ID",
        "description": "Retrieves a collection of devices related to a given user ID for user-focused device management and security analysis. ID parameter is username only, not full UPN. Essential for user-focused device management and insider threat detection.",
        "operationId": "getUserRelatedMachines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Username only (not full UPN) - e.g., 'user1' for user1@contoso.com",
            "schema": {
              "type": "string"
            },
            "example": "user1"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of devices related to the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/vulnerabilities": {
      "get": {
        "tags": [
          "Vulnerability"
        ],
        "summary": "List all vulnerabilities",
        "description": "Retrieves a list of all vulnerabilities affecting the organization with comprehensive vulnerability details including CVSS scores, exploit information, and exposure metrics. Part of Microsoft Defender Vulnerability Management with comprehensive OData V4 query support.",
        "operationId": "getAllVulnerabilities",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "OData filter query. Supported fields: id, name, description, cvssV3, publishedOn, severity, updatedOn",
            "schema": {
              "type": "string"
            },
            "example": "severity eq 'High'"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of entries to return (max 8,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 8000
            },
            "example": 100
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "description": "Number of entries to skip",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "List of vulnerabilities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/vulnerabilities/{cveId}": {
      "get": {
        "tags": [
          "Vulnerability"
        ],
        "summary": "Get vulnerability information by CVE ID",
        "description": "Retrieves detailed vulnerability information by its CVE ID including severity, CVSS score, and exploit information. Part of Microsoft Defender Vulnerability Management. Essential for vulnerability assessment and prioritization.",
        "operationId": "getVulnerabilityById",
        "parameters": [
          {
            "name": "cveId",
            "in": "path",
            "required": true,
            "description": "CVE identifier (e.g., CVE-2019-0608)",
            "schema": {
              "type": "string",
              "pattern": "^CVE-\\d{4}-\\d{4,}$"
            },
            "example": "CVE-2019-0608"
          }
        ],
        "responses": {
          "200": {
            "description": "Vulnerability information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vulnerability"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/vulnerabilities/{cveId}/machineReferences": {
      "get": {
        "tags": [
          "Vulnerability"
        ],
        "summary": "List devices affected by a specific vulnerability",
        "description": "Retrieves a list of devices affected by a specific vulnerability, essential for vulnerability remediation planning and impact assessment. Part of Microsoft Defender Vulnerability Management. Critical for vulnerability management workflows and targeted patching efforts.",
        "operationId": "getMachinesByVulnerability",
        "parameters": [
          {
            "name": "cveId",
            "in": "path",
            "required": true,
            "description": "CVE identifier (e.g., CVE-2019-0608)",
            "schema": {
              "type": "string",
              "pattern": "^CVE-\\d{4}-\\d{4,}$"
            },
            "example": "CVE-2019-0608"
          }
        ],
        "responses": {
          "200": {
            "description": "List of devices affected by the vulnerability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineReferenceCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/vulnerabilities/machinesVulnerabilities": {
      "get": {
        "tags": [
          "Vulnerability"
        ],
        "summary": "List vulnerabilities by machine and software",
        "description": "Retrieves a list of all vulnerabilities affecting the organization by machine and software, including fixing KB information when available. Excellent for Power BI integration with comprehensive OData V4 query support.",
        "operationId": "getVulnerabilitiesByMachines",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "OData filter query. Supported fields: id, cveId, machineId, fixingKbId, productName, productVersion, severity, productVendor",
            "schema": {
              "type": "string"
            },
            "example": "severity eq 'High'"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of entries to return (max 10,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000
            },
            "example": 100
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "description": "Number of entries to skip",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "List of vulnerabilities by machine and software",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineVulnerabilityCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/domains/{domain}/alerts": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "Get alerts related to domain",
        "description": "Retrieves a collection of alerts related to a given domain address for threat investigation and analysis. Useful for investigating domain-based threats and communications. Requires 'View Data' role permission for delegated access.",
        "operationId": "getDomainRelatedAlerts",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain address to query for related alerts",
            "schema": {
              "type": "string",
              "format": "hostname"
            },
            "example": "client.wns.windows.com"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of alerts related to the domain",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/domains/{domain}/machines": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "Get machines that communicated with domain",
        "description": "Retrieves a collection of machines that have communicated to or from a given domain address for network threat investigation. Limited to 500 devices in results. Useful for investigating network communications and lateral movement.",
        "operationId": "getDomainRelatedMachines",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain address to query for related machines",
            "schema": {
              "type": "string",
              "format": "hostname"
            },
            "example": "api.securitycenter.microsoft.com"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of machines that communicated with the domain (max 500)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/domains/{domain}/stats": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "Get domain statistics",
        "description": "Retrieves statistics on a given domain including organizational prevalence and first/last seen timestamps. Useful for understanding domain usage patterns within organization and provides temporal context for domain-based threat analysis.",
        "operationId": "getDomainStatistics",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "description": "The domain address to get statistics for",
            "schema": {
              "type": "string",
              "format": "hostname"
            },
            "example": "example.com"
          },
          {
            "name": "lookBackHours",
            "in": "query",
            "required": false,
            "description": "Hours to search back for statistics (default 30 days, max 720 hours/30 days)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 720,
              "default": 720
            },
            "example": 48
          }
        ],
        "responses": {
          "200": {
            "description": "Domain statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainStatistics"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/ips/{ip}/alerts": {
      "get": {
        "tags": [
          "IP"
        ],
        "summary": "Get alerts related to IP address",
        "description": "Retrieves a collection of alerts related to a given IP address for network threat investigation and analysis. Useful for investigating network-based threats and communications. Requires 'View Data' role permission for delegated access.",
        "operationId": "getIPRelatedAlerts",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "required": true,
            "description": "The IP address to query for related alerts",
            "schema": {
              "type": "string",
              "format": "ipv4"
            },
            "example": "10.209.67.177"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of alerts related to the IP address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/ips/{ip}/stats": {
      "get": {
        "tags": [
          "IP"
        ],
        "summary": "Get IP statistics",
        "description": "Retrieves statistics for a given IP address including organizational prevalence and first/last seen timestamps. Organization prevalence represents distinct count of devices that opened network connection to this IP. Useful for understanding IP usage patterns within organization.",
        "operationId": "getIPStatistics",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "required": true,
            "description": "The IP address to get statistics for",
            "schema": {
              "type": "string",
              "format": "ipv4"
            },
            "example": "10.209.67.177"
          },
          {
            "name": "lookBackHours",
            "in": "query",
            "required": false,
            "description": "Hours to search back for statistics (default 30 days, max 720 hours/30 days)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 720,
              "default": 720
            },
            "example": 48
          }
        ],
        "responses": {
          "200": {
            "description": "IP statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPStatistics"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/recommendations": {
      "get": {
        "tags": [
          "Recommendation"
        ],
        "summary": "List all security recommendations",
        "description": "Retrieves a list of all security recommendations affecting the organization with vulnerability management details and remediation guidance. Part of Microsoft Defender Vulnerability Management with comprehensive OData V4 query support.",
        "operationId": "getAllRecommendations",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "OData filter query. Supported fields: id, productName, vendor, recommendedVersion, recommendationCategory, subCategory, severityScore, remediationType, recommendedProgram, recommendedVendor, status",
            "schema": {
              "type": "string"
            },
            "example": "status eq 'Active'"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of entries to return (max 10,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000
            },
            "example": 100
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "description": "Number of entries to skip",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "List of security recommendations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/recommendations/{id}": {
      "get": {
        "tags": [
          "Recommendation"
        ],
        "summary": "Get security recommendation by ID",
        "description": "Retrieves a security recommendation by its ID from Threat and Vulnerability Management. Returns detailed recommendation information including exposure impact and remediation guidance.",
        "operationId": "getRecommendationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Security recommendation ID",
            "schema": {
              "type": "string"
            },
            "example": "va-_-google-_-chrome"
          }
        ],
        "responses": {
          "200": {
            "description": "Security recommendation retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recommendation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/recommendations/{id}/machineReferences": {
      "get": {
        "tags": [
          "Recommendation"
        ],
        "summary": "List devices associated with security recommendation",
        "description": "Retrieves a list of devices associated with a specific security recommendation from Threat and Vulnerability Management. Returns machine references for devices affected by the recommendation.",
        "operationId": "getRecommendationMachines",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Security recommendation ID",
            "schema": {
              "type": "string"
            },
            "example": "va-_-google-_-chrome"
          }
        ],
        "responses": {
          "200": {
            "description": "List of devices associated with the recommendation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineReferenceCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/recommendations/{id}/vulnerabilities": {
      "get": {
        "tags": [
          "Recommendation"
        ],
        "summary": "List vulnerabilities by security recommendation",
        "description": "Retrieves a list of vulnerabilities associated with a specific security recommendation from Threat and Vulnerability Management. Returns CVE details associated with the recommendation.",
        "operationId": "getRecommendationVulnerabilities",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Security recommendation ID",
            "schema": {
              "type": "string"
            },
            "example": "va-_-google-_-chrome"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vulnerabilities associated with the recommendation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/recommendations/{id}/software": {
      "get": {
        "tags": [
          "Recommendation"
        ],
        "summary": "Get software associated with recommendation",
        "description": "Get software associated with a security recommendation from Threat and Vulnerability Management. Returns software details related to the recommendation.",
        "operationId": "getRecommendationSoftware",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Security recommendation ID",
            "schema": {
              "type": "string"
            },
            "example": "va-_-google-_-chrome"
          }
        ],
        "responses": {
          "200": {
            "description": "Software associated with the recommendation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/advancedqueries/run": {
      "post": {
        "tags": [
          "AdvancedHunting"
        ],
        "summary": "Run advanced hunting queries (KQL)",
        "description": "Executes advanced hunting queries using KQL (Kusto Query Language) to search through security data. This is an older version with limited capabilities compared to Microsoft Graph security API. Data retention limited to 30 days, maximum 100,000 rows per query.",
        "operationId": "runAdvancedQuery",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvancedQueryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvancedQueryResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/certificateAssessmentByMachine": {
      "get": {
        "tags": [
          "Assessment"
        ],
        "summary": "Get certificate assessment by machine (JSON)",
        "description": "Returns certificate assessment data for all devices via JSON response (recommended for <100K devices). Data represents current snapshot with certificate details including thumbprint, path, and signature algorithm.",
        "operationId": "getCertificateAssessmentByMachine",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "Number of results in response (default: 50,000, max: 200,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200000,
              "default": 50000
            },
            "example": 50000
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of results to return",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Certificate assessment data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateAssessmentCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/certificateAssessmentExport": {
      "get": {
        "tags": [
          "Assessment"
        ],
        "summary": "Export certificate assessment (file)",
        "description": "Returns certificate assessment data via file download URLs (recommended for >100K devices). Files are gzip compressed in multiline JSON format with approximately 1KB per record.",
        "operationId": "exportCertificateAssessment",
        "parameters": [
          {
            "name": "sasValidHours",
            "in": "query",
            "required": false,
            "description": "Hours download URLs remain valid (max: 24, default: 3)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 24,
              "default": 3
            },
            "example": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Export file URLs generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportFilesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/baselineComplianceAssessmentByMachine": {
      "get": {
        "tags": [
          "SecurityBaseline"
        ],
        "summary": "Get baseline compliance assessment by machine (JSON)",
        "description": "Returns security baseline assessment data for all devices via JSON response (recommended for <100K devices). Returns separate entry for every unique combination of DeviceId, ProfileId, ConfigurationId.",
        "operationId": "getBaselineComplianceAssessmentByMachine",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "Number of results in response (default: 50,000, max: 200,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200000,
              "default": 50000
            },
            "example": 50000
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of results to return",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Baseline compliance assessment data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaselineComplianceAssessmentCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/BaselineComplianceAssessmentExport": {
      "get": {
        "tags": [
          "SecurityBaseline"
        ],
        "summary": "Export baseline compliance assessment (file)",
        "description": "Returns security baseline assessment data via file download URLs (recommended for >100K devices). Files are gzip compressed in multiline JSON format with approximately 1KB per record.",
        "operationId": "exportBaselineComplianceAssessment",
        "parameters": [
          {
            "name": "sasValidHours",
            "in": "query",
            "required": false,
            "description": "Hours download URLs remain valid (max: 6, default: 1)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 6,
              "default": 1
            },
            "example": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Export file URLs generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportFilesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/SecureConfigurationsAssessmentByMachine": {
      "get": {
        "tags": [
          "Assessment"
        ],
        "summary": "Get secure configuration assessment by machine (JSON)",
        "description": "Returns all configurations and their status on a per-device basis via JSON response with pagination support. Best for organizations with less than 100K devices. Covers categories: Application, OS, Network, Accounts, Security controls.",
        "operationId": "getSecureConfigurationsAssessmentByMachine",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "Number of results in response (default: 50,000, max: 200,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200000,
              "default": 50000
            },
            "example": 50000
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of results to return (doesn't return @odata.nextLink)",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Secure configuration assessment data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecureConfigurationAssessmentCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/SecureConfigurationsAssessmentExport": {
      "get": {
        "tags": [
          "Assessment"
        ],
        "summary": "Export secure configuration assessment (file)",
        "description": "Returns all secure configuration assessment data as downloadable files from Azure Storage, recommended for large organizations with more than 100K devices. Files are GZIP compressed in multiline JSON format.",
        "operationId": "exportSecureConfigurationsAssessment",
        "parameters": [
          {
            "name": "sasValidHours",
            "in": "query",
            "required": false,
            "description": "Number of hours download URLs are valid (max 6 hours, default 1 hour)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 6,
              "default": 1
            },
            "example": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Export file URLs generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportFilesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/SoftwareVulnerabilitiesByMachine": {
      "get": {
        "tags": [
          "Assessment"
        ],
        "summary": "Get software vulnerabilities by machine (JSON)",
        "description": "Retrieves all known software vulnerabilities and their details for all devices on a per-device basis as JSON responses with pagination support. Best for small organizations with less than 100K devices. Part of Microsoft Defender Vulnerability Management.",
        "operationId": "getSoftwareVulnerabilitiesByMachine",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "Number of results in response (default: 50,000, max: 200,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200000,
              "default": 50000
            },
            "example": 50000
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of results to return (doesn't return @odata.nextLink)",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Software vulnerabilities assessment data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareVulnerabilityAssessmentCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/SoftwareVulnerabilitiesExport": {
      "get": {
        "tags": [
          "Assessment"
        ],
        "summary": "Export software vulnerabilities (file)",
        "description": "Exports all software vulnerabilities data as downloadable files from Azure Storage, recommended for large organizations with more than 100K devices. Files are GZIP compressed in multiline JSON format.",
        "operationId": "getSoftwareVulnerabilitiesExport",
        "parameters": [
          {
            "name": "sasValidHours",
            "in": "query",
            "required": false,
            "description": "Number of hours download URLs are valid (max 6 hours, default 1 hour)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 6,
              "default": 1
            },
            "example": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Export file URLs generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportFilesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/SoftwareVulnerabilityChangesByMachine": {
      "get": {
        "tags": [
          "Assessment"
        ],
        "summary": "Get software vulnerability changes by machine (delta)",
        "description": "Returns changes in software vulnerabilities between a selected date and current date, showing new, fixed, and updated vulnerabilities. Maximum lookback period is 14 days. Status values: New, Fixed, Updated.",
        "operationId": "getSoftwareVulnerabilityChangesByMachine",
        "parameters": [
          {
            "name": "sinceTime",
            "in": "query",
            "required": true,
            "description": "Start time for data changes (max 14 days back)",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-11-01T00:00:00Z"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "Number of results in response (default: 50,000, max: 200,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200000,
              "default": 50000
            },
            "example": 50000
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of results to return (doesn't return @odata.nextLink)",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Software vulnerability changes retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareVulnerabilityChangesCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/SoftwareInventoryNoProductCodeByMachine": {
      "get": {
        "tags": [
          "Assessment"
        ],
        "summary": "Get non-CPE software inventory by machine (JSON)",
        "description": "Returns all installed software that doesn't have a Common Platform Enumeration (CPE) per device via JSON response with pagination support. Best for organizations with less than 100K devices. Complements regular software inventory for complete visibility.",
        "operationId": "getNonCpeSoftwareInventoryByMachine",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "Number of results in response (default: 50,000, max: 200,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200000,
              "default": 50000
            },
            "example": 50000
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of results to return (doesn't return @odata.nextLink)",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1000
          },
          {
            "name": "sinceTime",
            "in": "query",
            "required": false,
            "description": "Filter results since specified time",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2021-05-19"
          }
        ],
        "responses": {
          "200": {
            "description": "Non-CPE software inventory data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonCpeSoftwareInventoryCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/SoftwareInventoryNonCpeExport": {
      "get": {
        "tags": [
          "Assessment"
        ],
        "summary": "Export non-CPE software inventory (file)",
        "description": "Returns all non-CPE software data as downloadable files from Azure Storage, recommended for large organizations with more than 100K devices. Files are GZIP compressed in multiline JSON format with approximately 0.5KB per record.",
        "operationId": "exportNonCpeSoftwareInventory",
        "parameters": [
          {
            "name": "sasValidHours",
            "in": "query",
            "required": false,
            "description": "Number of hours download URLs are valid (max 6 hours, default 1 hour)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 6,
              "default": 1
            },
            "example": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Export file URLs generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportFilesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/SoftwareInventoryByMachine": {
      "get": {
        "tags": [
          "Assessment"
        ],
        "summary": "Get software inventory by machine (JSON)",
        "description": "Returns all installed software that has a Common Platform Enumeration (CPE) per device via JSON response with pagination support. Best for organizations with less than 100K devices. Includes vulnerability counts, installation paths, and end-of-support information.",
        "operationId": "getSoftwareInventoryByMachine",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "Number of results in response (default: 50,000, max: 200,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200000,
              "default": 50000
            },
            "example": 50000
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of results to return (doesn't return @odata.nextLink)",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1000
          },
          {
            "name": "sinceTime",
            "in": "query",
            "required": false,
            "description": "Filter results since specified time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2021-05-19T18:35:49.924Z"
          }
        ],
        "responses": {
          "200": {
            "description": "Software inventory data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInventoryCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/SoftwareInventoryExport": {
      "get": {
        "tags": [
          "Assessment"
        ],
        "summary": "Export software inventory (file)",
        "description": "Returns all CPE software inventory data as downloadable files from Azure Storage, recommended for large organizations with more than 100K devices. Files are GZIP compressed in multiline JSON format with approximately 0.5KB per record.",
        "operationId": "exportSoftwareInventory",
        "parameters": [
          {
            "name": "sasValidHours",
            "in": "query",
            "required": false,
            "description": "Number of hours download URLs are valid (max 6 hours, default 1 hour)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 6,
              "default": 1
            },
            "example": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Export file URLs generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportFilesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/DeviceAuthenticatedScanDefinitions": {
      "post": {
        "tags": [
          "AuthenticatedScan"
        ],
        "summary": "Create scan definition",
        "description": "Creates a new authenticated scan definition for Windows or Network device vulnerability scanning. Authentication parameters are required for all scan definitions.",
        "operationId": "createScanDefinition",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScanDefinitionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Scan definition created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanDefinition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "AuthenticatedScan"
        ],
        "summary": "Get all scan definitions",
        "description": "Get all scan definitions (Windows/Network types) with auth params, agent details, scan status. Returns comprehensive scan configuration and status information.",
        "operationId": "getAllScanDefinitions",
        "responses": {
          "200": {
            "description": "List of scan definitions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanDefinitionCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/DeviceAuthenticatedScanDefinitions/{id}": {
      "patch": {
        "tags": [
          "AuthenticatedScan"
        ],
        "summary": "Update scan definition",
        "description": "Updates an existing authenticated scan definition. Allows modification of scan name, targets, and schedule settings.",
        "operationId": "updateScanDefinition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Scan definition ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScanDefinitionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Scan definition updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanDefinition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/DeviceAuthenticatedScanDefinitions/BatchDelete": {
      "post": {
        "tags": [
          "AuthenticatedScan"
        ],
        "summary": "Batch delete scan definitions",
        "description": "Deletes multiple scan definitions in a single batch operation. Returns both successfully deleted and failed IDs.",
        "operationId": "batchDeleteScanDefinitions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteScanDefinitionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch delete operation completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDeleteScanDefinitionsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/DeviceAuthenticatedScanAgents": {
      "get": {
        "tags": [
          "AuthenticatedScan"
        ],
        "summary": "Get all authenticated scan agents",
        "description": "Retrieves a list of all authenticated scan agents with their details including machine information, versions, and last seen times. Returns comprehensive scan agent information for vulnerability management.",
        "operationId": "getAllScanAgents",
        "responses": {
          "200": {
            "description": "List of scan agents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanAgentCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/DeviceAuthenticatedScanAgents/{id}": {
      "get": {
        "tags": [
          "AuthenticatedScan"
        ],
        "summary": "Get scan agent details by ID",
        "description": "Retrieves detailed information for a specific authenticated scan agent by its ID. Requires ViewData or TvmViewData role permission for delegated access.",
        "operationId": "getScanAgentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the scan agent",
            "schema": {
              "type": "string"
            },
            "example": "7f3d76a6976818553e996875dc91f55df6b26625"
          }
        ],
        "responses": {
          "200": {
            "description": "Scan agent details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanAgent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/DeviceAuthenticatedScanDefinitions/GetScanHistoryByScanDefinitionId": {
      "post": {
        "tags": [
          "AuthenticatedScan"
        ],
        "summary": "Get scan history by definition IDs",
        "description": "Get scan history by definition IDs with OData support for authenticated scan definitions. Supports filtering and pagination for comprehensive scan history analysis.",
        "operationId": "getScanHistoryByDefinition",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "OData filter query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of entries to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "description": "Number of entries to skip",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetScanHistoryByDefinitionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Scan history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanHistoryCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/DeviceAuthenticatedScanDefinitions/GetScanHistoryBySessionId": {
      "post": {
        "tags": [
          "AuthenticatedScan"
        ],
        "summary": "Get scan history by session ID",
        "description": "Get scan history by session ID for authenticated scan definitions. Returns detailed scan history for a specific session including timing, status, and results.",
        "operationId": "getScanHistoryBySession",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetScanHistoryBySessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Scan history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanHistorySession"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/investigations": {
      "get": {
        "tags": [
          "AutomatedInvestigation"
        ],
        "summary": "List investigations",
        "description": "Retrieves a collection of investigations with comprehensive OData V4 query support for filtering and pagination. Supports automated investigation tracking and management with 5 filterable fields.",
        "operationId": "getInvestigations",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "OData filter query. Supported fields: startTime, id, state, machineId, triggeringAlertId",
            "schema": {
              "type": "string"
            },
            "example": "state eq 'Running'"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of entries to return (max 10,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000
            },
            "example": 100
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "description": "Number of entries to skip",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "List of investigations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestigationCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/investigations/{id}": {
      "get": {
        "tags": [
          "AutomatedInvestigation"
        ],
        "summary": "Get investigation by ID",
        "description": "Retrieves a specific investigation by its ID. The ID can be either the investigation ID or the investigation triggering alert ID. Returns single investigation entity with complete details.",
        "operationId": "getInvestigationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Investigation ID or triggering alert ID",
            "schema": {
              "type": "string"
            },
            "example": "63017"
          }
        ],
        "responses": {
          "200": {
            "description": "Investigation retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Investigation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/{id}/startInvestigation": {
      "post": {
        "tags": [
          "AutomatedInvestigation"
        ],
        "summary": "Start automated investigation on device",
        "description": "Initiates an automated investigation (AIR) on a device to automatically analyze and respond to potential threats. Essential for automated threat response and investigation workflows. Rate limited to 50 calls per hour.",
        "operationId": "startAutomatedInvestigation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Device ID",
            "schema": {
              "type": "string"
            },
            "example": "1e5bc9d7e413ddd7902c2932e418702b84d0cc07"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartInvestigationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Investigation started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Investigation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/Machines/BrowserExtensionsInventoryByMachine": {
      "get": {
        "tags": [
          "BrowserExtensions"
        ],
        "summary": "Get browser extensions inventory by machine (JSON)",
        "description": "Returns all known installed browser extensions and their details for all devices on a per-device basis via JSON response with pagination support. Best for organizations with less than 100K devices. Includes comprehensive browser extension risk assessment and permissions analysis.",
        "operationId": "getBrowserExtensionsInventoryByMachine",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "Number of results in response (default: 50,000, max: 200,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200000,
              "default": 50000
            },
            "example": 50000
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of results to return (doesn't return @odata.nextLink)",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 1000
          },
          {
            "name": "sinceTime",
            "in": "query",
            "required": false,
            "description": "Filter results since specified time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2022-05-26T18:46:27.000Z"
          }
        ],
        "responses": {
          "200": {
            "description": "Browser extensions inventory data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrowserExtensionsInventoryCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/browserextensionsinventoryExport": {
      "get": {
        "tags": [
          "BrowserExtensions"
        ],
        "summary": "Export browser extensions inventory (file)",
        "description": "Returns all browser extensions data as downloadable files from Azure Storage, recommended for large organizations with more than 100K devices. Files are GZIP compressed in multiline JSON format with approximately 0.5KB per record.",
        "operationId": "exportBrowserExtensionsInventory",
        "parameters": [
          {
            "name": "sasValidHours",
            "in": "query",
            "required": false,
            "description": "Number of hours download URLs are valid (max 6 hours, default 1 hour)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 6,
              "default": 1
            },
            "example": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Export file URLs generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportFilesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/browserextensions/permissionsinfo": {
      "get": {
        "tags": [
          "BrowserExtensions"
        ],
        "summary": "Get browser extensions permission info",
        "description": "Retrieves a list of all permissions requested by browser extensions with static data descriptions to enhance browser extension assessment results. Comprehensive OData V4 query support with 7 filterable fields.",
        "operationId": "getBrowserExtensionsPermissionInfo",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "OData filter query. Supported fields: id, name, description, cvssV3, publishedOn, severity, updatedOn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of entries to return (max 10,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000
            },
            "example": 100
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "description": "Number of entries to skip",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Browser extensions permission information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrowserExtensionPermissionCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/deviceavinfo": {
      "get": {
        "tags": [
          "DeviceHealth"
        ],
        "summary": "Get device antivirus info",
        "description": "Returns device antivirus health information via JSON response. Provides comprehensive antivirus status, scan times, and version information for all devices.",
        "operationId": "getDeviceAntivirusInfo",
        "responses": {
          "200": {
            "description": "Device antivirus information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceAntivirusInfoCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/machines/InfoGatheringExport": {
      "get": {
        "tags": [
          "DeviceHealth"
        ],
        "summary": "Export device information gathering data",
        "description": "Returns device information gathering assessment data via file download URLs. Provides comprehensive device information gathering data in compressed format.",
        "operationId": "exportInfoGathering",
        "parameters": [
          {
            "name": "sasValidHours",
            "in": "query",
            "required": false,
            "description": "Hours download URLs remain valid",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 24,
              "default": 3
            },
            "example": 6
          }
        ],
        "responses": {
          "200": {
            "description": "Export file URLs generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportFilesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/indicators": {
      "get": {
        "tags": [
          "Indicators"
        ],
        "summary": "List all active threat indicators",
        "description": "Retrieves a collection of all active threat intelligence indicators with comprehensive OData V4 query support for filtering and pagination. Essential for threat intelligence management and IOC tracking with 12 filterable fields.",
        "operationId": "getThreatIndicators",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "OData filter query. Supported fields: application, createdByDisplayName, expirationTime, generateAlert, title, rbacGroupNames, rbacGroupIds, indicatorValue, indicatorType, creationTimeDateTimeUtc, createdBy, action, severity",
            "schema": {
              "type": "string"
            },
            "example": "action eq 'AlertAndBlock'"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of entries to return (max 10,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000
            },
            "example": 100
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "description": "Number of entries to skip",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "List of threat indicators retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreatIndicatorCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Indicators"
        ],
        "summary": "Submit or update threat indicator",
        "description": "Submits or updates a new threat intelligence indicator entity with comprehensive configuration options for detection and response actions. Maximum 15,000 active indicators per tenant.",
        "operationId": "submitThreatIndicator",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateThreatIndicatorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Threat indicator created or updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThreatIndicator"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/indicators/{id}": {
      "delete": {
        "tags": [
          "Indicators"
        ],
        "summary": "Delete threat intelligence indicator by ID",
        "description": "Deletes a specific threat intelligence indicator by its unique identifier. Indicator deletion is permanent and cannot be undone.",
        "operationId": "deleteIndicatorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the threat intelligence indicator",
            "schema": {
              "type": "string"
            },
            "example": "995"
          }
        ],
        "responses": {
          "204": {
            "description": "Indicator deleted successfully"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/indicators/BatchDelete": {
      "post": {
        "tags": [
          "Indicators"
        ],
        "summary": "Batch delete threat intelligence indicators",
        "description": "Deletes multiple threat intelligence indicators in a single batch operation (up to 500 indicators). Partial failures supported - some indicators may be deleted while others fail.",
        "operationId": "batchDeleteIndicators",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteIndicatorsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch delete operation completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDeleteIndicatorsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/indicators/import": {
      "post": {
        "tags": [
          "Indicators"
        ],
        "summary": "Import batch of threat indicators",
        "description": "Submits or updates a batch of threat intelligence indicators with support for up to 500 indicators per request. Preferred method for importing large numbers of indicators with efficient bulk operations.",
        "operationId": "importThreatIndicators",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportThreatIndicatorsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Threat indicators imported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportThreatIndicatorsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/libraryfiles": {
      "get": {
        "tags": [
          "LiveResponseLibrary"
        ],
        "summary": "List live response library files",
        "description": "Retrieves a collection of all files in the live response library including scripts, executables, and other tools available for live response sessions. Includes SHA256 hashes for file integrity verification.",
        "operationId": "getLibraryFiles",
        "responses": {
          "200": {
            "description": "List of library files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryFileCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "LiveResponseLibrary"
        ],
        "summary": "Upload file to live response library",
        "description": "Uploads a file to the live response library for use in live response sessions with support for scripts and executables. Maximum file size is 20MB. Uses multipart/form-data content type.",
        "operationId": "uploadLibraryFile",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadLibraryFileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryFile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/libraryfiles/{fileName}": {
      "delete": {
        "tags": [
          "LiveResponseLibrary"
        ],
        "summary": "Delete file from live response library",
        "description": "Deletes a file from the live response library used for remote device investigations and remediation activities. File deletion is permanent and cannot be undone.",
        "operationId": "deleteLibraryFile",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "description": "Name of the file to delete from the library",
            "schema": {
              "type": "string"
            },
            "example": "script1.ps1"
          }
        ],
        "responses": {
          "204": {
            "description": "File deleted successfully"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/remediationTasks": {
      "get": {
        "tags": [
          "RemediationActivity"
        ],
        "summary": "List all remediation activities",
        "description": "Returns information about all remediation activities from Threat and Vulnerability Management. Supports comprehensive OData filtering and pagination with 2 filterable fields.",
        "operationId": "getRemediationActivities",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "OData filter query. Supported fields: createdOn, status",
            "schema": {
              "type": "string"
            },
            "example": "status eq 'Active'"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of entries to return (max 10,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000
            },
            "example": 50
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "description": "Number of entries to skip",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "List of remediation activities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationActivityCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/remediationTasks/{id}": {
      "get": {
        "tags": [
          "RemediationActivity"
        ],
        "summary": "Get remediation activity by ID",
        "description": "Returns information about a specific remediation activity by its ID from Threat and Vulnerability Management. Returns detailed information about the remediation activity.",
        "operationId": "getRemediationActivityById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Remediation activity ID",
            "schema": {
              "type": "string"
            },
            "example": "03942ef5-aewb-4w6e-b555-d6a97013844w"
          }
        ],
        "responses": {
          "200": {
            "description": "Remediation activity retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemediationActivity"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/remediationTasks/{id}/machineReferences": {
      "get": {
        "tags": [
          "RemediationActivity"
        ],
        "summary": "List exposed devices for remediation activity",
        "description": "Retrieves a list of exposed devices for a specific remediation activity from Threat and Vulnerability Management. Returns machine references for devices affected by the remediation activity.",
        "operationId": "getRemediationExposedDevices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Remediation activity ID",
            "schema": {
              "type": "string"
            },
            "example": "03942ef5-aewb-4w6e-b555-d6a97013844w"
          }
        ],
        "responses": {
          "200": {
            "description": "List of exposed devices retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineReferenceCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/configurationScore": {
      "get": {
        "tags": [
          "Score"
        ],
        "summary": "Get organizational device secure score",
        "description": "Retrieves the organizational Microsoft Secure Score for Devices indicating endpoint resilience against cybersecurity threats. Higher scores indicate more resilient endpoints and better security posture.",
        "operationId": "getDeviceSecureScore",
        "responses": {
          "200": {
            "description": "Device secure score retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationScore"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/exposureScore": {
      "get": {
        "tags": [
          "Score"
        ],
        "summary": "Get organizational exposure score",
        "description": "Retrieves the organizational exposure score indicating the level of vulnerability exposure across the organization. Lower scores indicate better security posture and reduced vulnerability exposure.",
        "operationId": "getExposureScore",
        "responses": {
          "200": {
            "description": "Exposure score retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureScore"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/exposureScore/ByMachineGroups": {
      "get": {
        "tags": [
          "Score"
        ],
        "summary": "List exposure score by device group",
        "description": "Retrieves the exposure score for each device group, providing vulnerability exposure metrics segmented by RBAC groups. Essential for understanding security posture across different organizational units and supports risk-based prioritization.",
        "operationId": "getExposureScoreByMachineGroups",
        "responses": {
          "200": {
            "description": "Exposure scores by device group retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureScoreByGroupCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/baselineProfiles": {
      "get": {
        "tags": [
          "SecurityBaseline"
        ],
        "summary": "List security baseline profiles",
        "description": "List all security baselines assessment profiles with OData V4 support. Returns all available baseline profiles for security baseline assessment.",
        "operationId": "getBaselineProfiles",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "OData filter query",
            "schema": {
              "type": "string"
            },
            "example": "isActive eq true"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of entries to return",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 100
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "description": "Number of entries to skip",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "List of baseline profiles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaselineProfileCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/baselineConfigurations": {
      "get": {
        "tags": [
          "SecurityBaseline"
        ],
        "summary": "List security baseline configurations",
        "description": "List configurations in active baseline profiles with OData V4 support for security baseline assessment. Returns configuration details from active baseline profiles.",
        "operationId": "getBaselineConfigurations",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "OData filter query",
            "schema": {
              "type": "string"
            },
            "example": "isCompliant eq false"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of entries to return",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 100
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "description": "Number of entries to skip",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "List of baseline configurations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaselineConfigurationCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/Software": {
      "get": {
        "tags": [
          "Software"
        ],
        "summary": "List software inventory",
        "description": "Retrieves the organization software inventory with vulnerability and exposure information, supporting comprehensive OData V4 queries. Essential for software asset management and vulnerability assessment with 3 filterable fields.",
        "operationId": "getSoftware",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "description": "OData filter query. Supported fields: id, name, vendor",
            "schema": {
              "type": "string"
            },
            "example": "vendor eq 'microsoft'"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "description": "Number of entries to return (max 10,000)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000
            },
            "example": 100
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "description": "Number of entries to skip",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Software inventory retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/Software/{Id}": {
      "get": {
        "tags": [
          "Software"
        ],
        "summary": "Get software details by ID",
        "description": "Retrieves detailed information about a specific software by its ID including vulnerability and exposure metrics. Essential for detailed software security assessment.",
        "operationId": "getSoftwareById",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "description": "Software ID (e.g., microsoft-_-edge)",
            "schema": {
              "type": "string"
            },
            "example": "microsoft-_-edge"
          }
        ],
        "responses": {
          "200": {
            "description": "Software details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Software"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/Software/{Id}/machineReferences": {
      "get": {
        "tags": [
          "Software"
        ],
        "summary": "List devices that have specific software installed",
        "description": "Retrieves a list of device references that have the specified software installed, useful for software inventory and compliance tracking. Essential for software compliance tracking and license management.",
        "operationId": "getMachinesBySoftware",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "description": "Software ID (e.g., microsoft-_-edge)",
            "schema": {
              "type": "string"
            },
            "example": "microsoft-_-edge"
          }
        ],
        "responses": {
          "200": {
            "description": "List of devices with software retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineReferenceCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/Software/{Id}/getmissingkbs": {
      "get": {
        "tags": [
          "Software"
        ],
        "summary": "Get missing security updates (KBs) by software ID",
        "description": "Retrieves missing security updates (Knowledge Base articles) for a specific software product, essential for software-focused patch management. Critical for software vendor-focused vulnerability management.",
        "operationId": "getMissingKBsBySoftware",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "description": "Software ID (e.g., microsoft-_-edge)",
            "schema": {
              "type": "string"
            },
            "example": "microsoft-_-edge"
          }
        ],
        "responses": {
          "200": {
            "description": "Missing security updates retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingKBCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/Software/{Id}/distributions": {
      "get": {
        "tags": [
          "Software"
        ],
        "summary": "List software version distribution",
        "description": "List software version distribution for organization showing how versions are distributed across devices. Useful for understanding software deployment status and version management.",
        "operationId": "getSoftwareVersionDistribution",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "description": "Software ID",
            "schema": {
              "type": "string"
            },
            "example": "microsoft-_-edge"
          }
        ],
        "responses": {
          "200": {
            "description": "Software version distribution retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareDistributionCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    },
    "/api/Software/{Id}/vulnerabilities": {
      "get": {
        "tags": [
          "Software"
        ],
        "summary": "List vulnerabilities in specific software",
        "description": "List vulnerabilities in specific software from Threat and Vulnerability Management. Shows all vulnerabilities affecting the specific software with detailed security metrics.",
        "operationId": "getSoftwareVulnerabilities",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "description": "Software ID",
            "schema": {
              "type": "string"
            },
            "example": "microsoft-_-edge"
          }
        ],
        "responses": {
          "200": {
            "description": "Software vulnerabilities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "oauth2": [
              "https://api.securitycenter.microsoft.com/.default"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://login.microsoftonline.com/{tenant-id}/oauth2/v2.0/token",
            "scopes": {
              "https://api.securitycenter.microsoft.com/.default": "Access Microsoft Defender for Endpoint API"
            }
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request - Invalid request parameters or body",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized - Invalid or missing authentication token",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden - Insufficient permissions",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "429": {
        "description": "Too Many Requests - Rate limit exceeded",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    },
    "schemas": {
      "Alert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the alert"
          },
          "incidentId": {
            "type": "integer",
            "description": "Incident ID associated with the alert",
            "nullable": true
          },
          "investigationId": {
            "type": "integer",
            "description": "Investigation ID associated with the alert",
            "nullable": true
          },
          "assignedTo": {
            "type": "string",
            "description": "User assigned to handle the alert",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "enum": [
              "Informational",
              "Low",
              "Medium",
              "High"
            ],
            "description": "Alert severity level"
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "InProgress",
              "Resolved"
            ],
            "description": "Alert status"
          },
          "classification": {
            "type": "string",
            "enum": [
              "TruePositive",
              "InformationalExpectedActivity",
              "FalsePositive"
            ],
            "description": "Alert classification",
            "nullable": true
          },
          "determination": {
            "type": "string",
            "enum": [
              "MultiStagedAttack",
              "MaliciousUserActivity",
              "CompromisedUser",
              "Malware",
              "Phishing",
              "UnwantedSoftware",
              "SecurityTesting",
              "LineOfBusinessApplication",
              "ConfirmedActivity",
              "NotMalicious",
              "InsufficientData",
              "Other"
            ],
            "description": "Alert determination",
            "nullable": true
          },
          "investigationState": {
            "type": "string",
            "enum": [
              "Unknown",
              "Terminated",
              "SuccessfullyRemediated",
              "Benign",
              "Failed",
              "PartiallyRemediated",
              "Running",
              "PendingApproval",
              "UnsupportedOs",
              "UnsupportedAlertType",
              "SuppressedAlert"
            ],
            "description": "Investigation state"
          },
          "detectionSource": {
            "type": "string",
            "description": "Source that detected the alert"
          },
          "category": {
            "type": "string",
            "description": "Alert category"
          },
          "title": {
            "type": "string",
            "description": "Alert title"
          },
          "description": {
            "type": "string",
            "description": "Alert description"
          },
          "alertCreationTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when alert was created"
          },
          "firstEventTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time of first event that triggered the alert"
          },
          "lastEventTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time of last event that triggered the alert"
          },
          "lastUpdateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when alert was last updated"
          },
          "machineId": {
            "type": "string",
            "description": "ID of the machine associated with the alert"
          },
          "computerDnsName": {
            "type": "string",
            "description": "DNS name of the computer"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "RBAC group name"
          },
          "aadTenantId": {
            "type": "string",
            "description": "Azure AD tenant ID"
          },
          "threatFamilyName": {
            "type": "string",
            "description": "Threat family name",
            "nullable": true
          },
          "mitreTechniques": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "MITRE ATT&CK techniques"
          },
          "relatedUser": {
            "type": "object",
            "properties": {
              "userName": {
                "type": "string"
              },
              "domainName": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "createdBy": {
                  "type": "string"
                },
                "createdTime": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "evidence": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Evidence"
            },
            "description": "Evidence associated with the alert (available when using $expand=evidence)"
          }
        },
        "required": [
          "id",
          "severity",
          "status",
          "title",
          "alertCreationTime",
          "machineId"
        ]
      },
      "AlertCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          }
        ]
      },
      "Evidence": {
        "type": "object",
        "properties": {
          "entityType": {
            "type": "string",
            "description": "Type of evidence entity"
          },
          "evidenceCreationTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when evidence was created"
          },
          "sha1": {
            "type": "string",
            "description": "SHA1 hash of the file evidence",
            "nullable": true
          },
          "sha256": {
            "type": "string",
            "description": "SHA256 hash of the file evidence",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "Name of the file evidence",
            "nullable": true
          },
          "filePath": {
            "type": "string",
            "description": "Path of the file evidence",
            "nullable": true
          },
          "processId": {
            "type": "integer",
            "description": "Process ID",
            "nullable": true
          },
          "processCommandLine": {
            "type": "string",
            "description": "Process command line",
            "nullable": true
          },
          "processCreationTime": {
            "type": "string",
            "format": "date-time",
            "description": "Process creation time",
            "nullable": true
          },
          "parentProcessId": {
            "type": "integer",
            "description": "Parent process ID",
            "nullable": true
          },
          "parentProcessCreationTime": {
            "type": "string",
            "format": "date-time",
            "description": "Parent process creation time",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "description": "IP address evidence",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL evidence",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "description": "Account name evidence",
            "nullable": true
          },
          "domainName": {
            "type": "string",
            "description": "Domain name evidence",
            "nullable": true
          },
          "userSid": {
            "type": "string",
            "description": "User SID evidence",
            "nullable": true
          },
          "aadUserId": {
            "type": "string",
            "description": "Azure AD user ID evidence",
            "nullable": true
          },
          "userPrincipalName": {
            "type": "string",
            "description": "User principal name evidence",
            "nullable": true
          },
          "detectionStatus": {
            "type": "string",
            "description": "Detection status of the evidence",
            "nullable": true
          }
        },
        "required": [
          "entityType",
          "evidenceCreationTime"
        ]
      },
      "UpdateAlertRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "New",
              "InProgress",
              "Resolved"
            ],
            "description": "Alert status"
          },
          "assignedTo": {
            "type": "string",
            "description": "User to assign the alert to (email address)"
          },
          "classification": {
            "type": "string",
            "enum": [
              "TruePositive",
              "InformationalExpectedActivity",
              "FalsePositive"
            ],
            "description": "Alert classification"
          },
          "determination": {
            "type": "string",
            "enum": [
              "MultiStagedAttack",
              "MaliciousUserActivity",
              "CompromisedUser",
              "Malware",
              "Phishing",
              "UnwantedSoftware",
              "SecurityTesting",
              "LineOfBusinessApplication",
              "ConfirmedActivity",
              "NotMalicious",
              "InsufficientData",
              "Other"
            ],
            "description": "Alert determination - values vary by classification. TruePositive: MultiStagedAttack, MaliciousUserActivity, CompromisedUser, Malware, Phishing, UnwantedSoftware, Other. InformationalExpectedActivity: SecurityTesting, LineOfBusinessApplication, ConfirmedActivity, Other. FalsePositive: NotMalicious, InsufficientData, Other"
          },
          "comment": {
            "type": "string",
            "description": "Comment to add to the alert",
            "maxLength": 10000
          }
        },
        "description": "Request body for updating alert properties. All fields are optional - include only fields that need updating for best performance."
      },
      "BatchUpdateAlertsRequest": {
        "type": "object",
        "properties": {
          "alertIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of alert IDs to update",
            "minItems": 1,
            "maxItems": 500
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "InProgress",
              "Resolved"
            ],
            "description": "Alert status to set"
          },
          "assignedTo": {
            "type": "string",
            "description": "User to assign the alerts to (email address)"
          },
          "classification": {
            "type": "string",
            "enum": [
              "TruePositive",
              "InformationalExpectedActivity",
              "FalsePositive"
            ],
            "description": "Alert classification to set"
          },
          "determination": {
            "type": "string",
            "enum": [
              "MultiStagedAttack",
              "MaliciousUserActivity",
              "CompromisedUser",
              "Malware",
              "Phishing",
              "UnwantedSoftware",
              "SecurityTesting",
              "LineOfBusinessApplication",
              "ConfirmedActivity",
              "NotMalicious",
              "InsufficientData",
              "Other"
            ],
            "description": "Alert determination to set"
          },
          "comment": {
            "type": "string",
            "description": "Comment to add to all alerts",
            "maxLength": 10000
          }
        },
        "required": [
          "alertIds"
        ],
        "description": "Request body for batch updating multiple alerts. All specified alerts will be updated with the same values."
      },
      "BatchUpdateAlertsResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Alert ID"
                },
                "status": {
                  "type": "string",
                  "description": "Updated status"
                },
                "assignedTo": {
                  "type": "string",
                  "description": "Assigned user"
                },
                "classification": {
                  "type": "string",
                  "description": "Updated classification"
                },
                "determination": {
                  "type": "string",
                  "description": "Updated determination"
                },
                "lastUpdateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when alert was last updated"
                }
              }
            }
          }
        }
      },
      "CreateAlertByReferenceRequest": {
        "type": "object",
        "properties": {
          "eventTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the event occurred"
          },
          "reportId": {
            "type": "string",
            "description": "Report ID associated with the event"
          },
          "machineId": {
            "type": "string",
            "description": "ID of the machine where the event occurred"
          },
          "severity": {
            "type": "string",
            "enum": [
              "Low",
              "Medium",
              "High"
            ],
            "description": "Alert severity level"
          },
          "title": {
            "type": "string",
            "description": "Alert title",
            "maxLength": 200
          },
          "description": {
            "type": "string",
            "description": "Alert description",
            "maxLength": 10000
          },
          "recommendedAction": {
            "type": "string",
            "description": "Recommended action for the alert",
            "maxLength": 10000
          },
          "category": {
            "type": "string",
            "description": "Alert category"
          }
        },
        "required": [
          "eventTime",
          "machineId",
          "reportId"
        ],
        "description": "Request body for creating an alert by reference"
      },
      "Domain": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "Domain host name"
          }
        },
        "required": [
          "host"
        ]
      },
      "DomainCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          }
        ]
      },
      "File": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context URL"
          },
          "sha1": {
            "type": "string",
            "description": "SHA1 hash of the file"
          },
          "sha256": {
            "type": "string",
            "description": "SHA256 hash of the file"
          },
          "globalPrevalence": {
            "type": "integer",
            "description": "Number of devices worldwide that have observed this file"
          },
          "globalFirstObserved": {
            "type": "string",
            "format": "date-time",
            "description": "First time this file was observed globally"
          },
          "globalLastObserved": {
            "type": "string",
            "format": "date-time",
            "description": "Last time this file was observed globally"
          },
          "size": {
            "type": "integer",
            "description": "File size in bytes"
          },
          "fileType": {
            "type": "string",
            "description": "File type (e.g., APP, DLL, EXE)"
          },
          "isPeFile": {
            "type": "boolean",
            "description": "Whether the file is a Portable Executable (PE) file"
          },
          "filePublisher": {
            "type": "string",
            "description": "Publisher of the file"
          },
          "fileProductName": {
            "type": "string",
            "description": "Product name associated with the file"
          },
          "signer": {
            "type": "string",
            "description": "Signer of the file certificate"
          },
          "issuer": {
            "type": "string",
            "description": "Issuer of the file certificate"
          },
          "signerHash": {
            "type": "string",
            "description": "Hash of the certificate signer"
          },
          "isValidCertificate": {
            "type": "boolean",
            "description": "Whether the file has a valid certificate"
          },
          "determinationType": {
            "type": "string",
            "description": "Type of security determination (e.g., Pua, Malware, Clean)"
          },
          "determinationValue": {
            "type": "string",
            "description": "Specific security determination value"
          }
        }
      },
      "FileCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        ]
      },
      "IP": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "IP address"
          }
        },
        "required": [
          "id"
        ]
      },
      "IPCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IP"
                }
              }
            }
          }
        ]
      },
      "Machine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Machine identifier"
          },
          "computerDnsName": {
            "type": "string",
            "description": "Machine DNS name"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time",
            "description": "First time the machine was seen"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Last time the machine was seen"
          },
          "osPlatform": {
            "type": "string",
            "description": "Operating system platform"
          },
          "version": {
            "type": "string",
            "description": "Operating system version"
          },
          "osProcessor": {
            "type": "string",
            "description": "Operating system processor architecture"
          },
          "lastIpAddress": {
            "type": "string",
            "description": "Last IP address"
          },
          "lastExternalIpAddress": {
            "type": "string",
            "description": "Last external IP address"
          },
          "osBuild": {
            "type": "integer",
            "description": "Operating system build number"
          },
          "healthStatus": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "ImpairedCommunication",
              "NoSensorData",
              "NoSensorDataImpairedCommunication"
            ],
            "description": "Machine health status"
          },
          "rbacGroupId": {
            "type": "integer",
            "description": "RBAC group ID"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "RBAC group name"
          },
          "riskScore": {
            "type": "string",
            "enum": [
              "None",
              "Informational",
              "Low",
              "Medium",
              "High"
            ],
            "description": "Machine risk score"
          },
          "exposureLevel": {
            "type": "string",
            "enum": [
              "None",
              "Low",
              "Medium",
              "High"
            ],
            "description": "Machine exposure level"
          },
          "isAadJoined": {
            "type": "boolean",
            "description": "Whether the machine is Azure AD joined"
          },
          "aadDeviceId": {
            "type": "string",
            "description": "Azure AD device ID",
            "nullable": true
          },
          "machineTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Machine tags"
          },
          "deviceValue": {
            "type": "string",
            "enum": [
              "Normal",
              "Low",
              "High"
            ],
            "description": "Device value assessment"
          },
          "ipAddresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ipAddress": {
                  "type": "string"
                },
                "macAddress": {
                  "type": "string"
                },
                "operationalStatus": {
                  "type": "string"
                }
              }
            },
            "description": "IP addresses associated with the machine"
          }
        },
        "required": [
          "id",
          "computerDnsName"
        ]
      },
      "MachineCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          }
        ]
      },
      "UpdateMachineRequest": {
        "type": "object",
        "properties": {
          "machineTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Machine tags - update appends tags to existing collection. Must include existing tags in request to preserve them."
          },
          "deviceValue": {
            "type": "string",
            "enum": [
              "Normal",
              "Low",
              "High"
            ],
            "description": "Device value assessment"
          }
        },
        "description": "Request body for updating machine properties. All fields are optional - include only fields that need updating for best performance."
      },
      "SetDeviceValueRequest": {
        "type": "object",
        "properties": {
          "DeviceValue": {
            "type": "string",
            "enum": [
              "Normal",
              "Low",
              "High"
            ],
            "description": "Device value assessment. Normal: Standard business device, Low: Lower priority device (e.g., test machines), High: Critical business device (e.g., domain controllers, executives)"
          }
        },
        "required": [
          "DeviceValue"
        ],
        "description": "Request body for setting device value"
      },
      "MissingKB": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Knowledge Base article identifier"
          },
          "name": {
            "type": "string",
            "description": "Security update name"
          },
          "productsNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of products affected by this security update"
          },
          "url": {
            "type": "string",
            "description": "Direct link to Microsoft Update Catalog for the KB"
          },
          "machineMissedOn": {
            "type": "integer",
            "description": "Number of machines in organization missing this update for this software"
          },
          "cveAddressed": {
            "type": "integer",
            "description": "Number of CVEs addressed by this security update"
          }
        }
      },
      "MissingKBCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MissingKB"
                }
              }
            }
          }
        ]
      },
      "MachineTagRequest": {
        "type": "object",
        "properties": {
          "Value": {
            "type": "string",
            "description": "Tag value to add or remove"
          },
          "Action": {
            "type": "string",
            "enum": [
              "Add",
              "Remove"
            ],
            "description": "Action to perform on the tag"
          }
        },
        "required": [
          "Value",
          "Action"
        ],
        "description": "Request body for adding or removing machine tags"
      },
      "MachineTagResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Machine identifier"
          },
          "computerDnsName": {
            "type": "string",
            "description": "Machine DNS name"
          },
          "machineTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Updated machine tags"
          },
          "lastUpdateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Last update time"
          }
        },
        "required": [
          "id",
          "computerDnsName",
          "machineTags"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User identifier"
          },
          "accountName": {
            "type": "string",
            "description": "User account name"
          },
          "accountDomain": {
            "type": "string",
            "description": "User account domain"
          },
          "accountSid": {
            "type": "string",
            "description": "User account SID"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time",
            "description": "First time the user was seen"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Last time the user was seen"
          },
          "mostPrevalentMachineId": {
            "type": "string",
            "description": "ID of the machine where the user is most prevalent",
            "nullable": true
          },
          "leastPrevalentMachineId": {
            "type": "string",
            "description": "ID of the machine where the user is least prevalent",
            "nullable": true
          },
          "logonTypes": {
            "type": "string",
            "description": "Logon types used by the user"
          },
          "logOnMachinesCount": {
            "type": "integer",
            "description": "Number of machines the user has logged on to"
          },
          "isDomainAdmin": {
            "type": "boolean",
            "description": "Whether the user is a domain administrator"
          },
          "isOnlyNetworkUser": {
            "type": "boolean",
            "description": "Whether the user is only a network user"
          }
        },
        "required": [
          "id",
          "accountName"
        ]
      },
      "UserCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        ]
      },
      "Recommendation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Recommendation identifier"
          },
          "productName": {
            "type": "string",
            "description": "Name of the product"
          },
          "recommendationName": {
            "type": "string",
            "description": "Name of the recommendation"
          },
          "weaknesses": {
            "type": "integer",
            "description": "Number of weaknesses found"
          },
          "vendor": {
            "type": "string",
            "description": "Product vendor"
          },
          "recommendedVersion": {
            "type": "string",
            "description": "Recommended version to update to"
          },
          "recommendedVendor": {
            "type": "string",
            "description": "Recommended vendor"
          },
          "recommendedProgram": {
            "type": "string",
            "description": "Recommended program"
          },
          "recommendationCategory": {
            "type": "string",
            "description": "Category of the recommendation"
          },
          "subCategory": {
            "type": "string",
            "description": "Sub-category of the recommendation"
          },
          "severityScore": {
            "type": "number",
            "description": "Severity score of the recommendation"
          },
          "publicExploit": {
            "type": "boolean",
            "description": "Whether public exploit exists"
          },
          "activeAlert": {
            "type": "boolean",
            "description": "Whether there are active alerts"
          },
          "associatedThreats": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Associated threat identifiers"
          },
          "remediationType": {
            "type": "string",
            "description": "Type of remediation required"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Completed",
              "Exception",
              "PlannedForRemediation"
            ],
            "description": "Status of the recommendation"
          },
          "configScoreImpact": {
            "type": "number",
            "description": "Configuration score impact"
          },
          "exposureImpact": {
            "type": "number",
            "description": "Exposure impact score"
          },
          "totalMachineCount": {
            "type": "integer",
            "description": "Total number of machines affected"
          },
          "exposedMachinesCount": {
            "type": "integer",
            "description": "Number of exposed machines"
          },
          "nonProductivityImpactedAssets": {
            "type": "integer",
            "description": "Number of non-productivity impacted assets"
          },
          "relatedComponent": {
            "type": "string",
            "description": "Related component name"
          },
          "hasUnpatchableCve": {
            "type": "boolean",
            "description": "Whether the recommendation has unpatchable CVEs"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Recommendation tags"
          },
          "exposedCriticalDevices": {
            "type": "integer",
            "description": "Number of exposed critical devices"
          }
        }
      },
      "RecommendationCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recommendation"
                }
              }
            }
          }
        ]
      },
      "MachineAction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Machine action identifier"
          },
          "type": {
            "type": "string",
            "enum": [
              "CollectInvestigationPackage",
              "RunAntiVirusScan",
              "StopAndQuarantineFile",
              "Isolate",
              "Unisolate",
              "RestrictCodeExecution",
              "UnrestrictCodeExecution",
              "OffboardMachine",
              "LiveResponse"
            ],
            "description": "Type of machine action"
          },
          "scope": {
            "type": "string",
            "description": "Scope of the action (e.g., 'Full' for antivirus scan)",
            "nullable": true
          },
          "requestor": {
            "type": "string",
            "description": "User who requested the action"
          },
          "requestorComment": {
            "type": "string",
            "description": "Comment provided by the requestor"
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "InProgress",
              "Succeeded",
              "Failed",
              "TimeOut",
              "Cancelled"
            ],
            "description": "Status of the machine action"
          },
          "machineId": {
            "type": "string",
            "description": "Target machine identifier"
          },
          "computerDnsName": {
            "type": "string",
            "description": "Target machine DNS name"
          },
          "creationDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Action creation time in UTC"
          },
          "lastUpdateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Last update time in UTC"
          },
          "relatedFileInfo": {
            "type": "object",
            "properties": {
              "fileIdentifier": {
                "type": "string",
                "description": "File identifier"
              },
              "fileIdentifierType": {
                "type": "string",
                "description": "Type of file identifier"
              }
            },
            "description": "Related file information for file-related actions",
            "nullable": true
          }
        },
        "required": [
          "id",
          "type",
          "status",
          "machineId"
        ]
      },
      "MachineActionCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MachineAction"
                }
              }
            }
          }
        ]
      },
      "MultipleMachineTagRequest": {
        "type": "object",
        "properties": {
          "MachineIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 500,
            "description": "Array of machine IDs (maximum 500 machines per request)"
          },
          "Tag": {
            "type": "string",
            "description": "Tag value to add or remove"
          },
          "Action": {
            "type": "string",
            "enum": [
              "Add",
              "Remove"
            ],
            "description": "Action to perform on the tag"
          }
        },
        "required": [
          "MachineIds",
          "Tag",
          "Action"
        ],
        "description": "Request body for adding or removing tags for multiple machines"
      },
      "MultipleMachineTagResponse": {
        "type": "object",
        "properties": {
          "MachineIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of machine IDs that were processed"
          }
        },
        "required": [
          "MachineIds"
        ]
      },
      "CancelMachineActionRequest": {
        "type": "object",
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment explaining the reason for cancellation (required for audit purposes)"
          }
        },
        "required": [
          "Comment"
        ]
      },
      "MachineActionRequest": {
        "type": "object",
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment explaining the reason for the action"
          }
        },
        "required": [
          "Comment"
        ]
      },
      "IsolateMachineRequest": {
        "type": "object",
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment explaining the reason for isolation"
          },
          "IsolationType": {
            "type": "string",
            "enum": [
              "Full",
              "Selective",
              "UnManagedDevice"
            ],
            "description": "Type of isolation: Full (Windows 10 v1703+, Windows 11, all Linux), Selective (Windows 10 v1709+, Windows 11), UnManagedDevice (unmanaged devices only)",
            "default": "Full"
          }
        },
        "required": [
          "Comment"
        ]
      },
      "RunAntiVirusScanRequest": {
        "type": "object",
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment explaining the reason for the scan"
          },
          "ScanType": {
            "type": "string",
            "enum": [
              "Quick",
              "Full"
            ],
            "description": "Type of scan: Quick (fast scan of common malware locations) or Full (comprehensive scan of entire device)"
          }
        },
        "required": [
          "Comment",
          "ScanType"
        ]
      },
      "StopAndQuarantineFileRequest": {
        "type": "object",
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment explaining the reason for stopping and quarantining the file"
          },
          "Sha1": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{40}$",
            "description": "SHA1 hash of the file to stop and quarantine (40 character hexadecimal string)"
          }
        },
        "required": [
          "Comment",
          "Sha1"
        ]
      },
      "LiveResponseRequest": {
        "type": "object",
        "properties": {
          "Commands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiveResponseCommand"
            },
            "description": "Array of live response commands to execute sequentially"
          },
          "Comment": {
            "type": "string",
            "description": "Comment explaining the reason for the live response session"
          }
        },
        "required": [
          "Commands"
        ]
      },
      "LiveResponseCommand": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PutFile",
              "RunScript",
              "GetFile"
            ],
            "description": "Type of live response command"
          },
          "params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiveResponseParameter"
            },
            "description": "Parameters for the command"
          }
        },
        "required": [
          "type",
          "params"
        ]
      },
      "LiveResponseParameter": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Parameter name (e.g., ScriptName, Args, Path)"
          },
          "value": {
            "type": "string",
            "description": "Parameter value"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "LiveResponseAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MachineAction"
          },
          {
            "type": "object",
            "properties": {
              "commands": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LiveResponseCommandStatus"
                },
                "description": "Status of each command in the live response session"
              }
            }
          }
        ]
      },
      "LiveResponseCommandStatus": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "description": "Command index in the sequence"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Command start time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Command end time"
          },
          "commandStatus": {
            "type": "string",
            "enum": [
              "Created",
              "Running",
              "Completed",
              "Failed"
            ],
            "description": "Current status of the command"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Any errors encountered during command execution"
          },
          "command": {
            "$ref": "#/components/schemas/LiveResponseCommand",
            "description": "The original command that was executed"
          }
        }
      },
      "LiveResponseDownloadLink": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context URL"
          },
          "value": {
            "type": "string",
            "format": "uri",
            "description": "Download link for the live response command result (valid for 30 minutes)"
          }
        },
        "required": [
          "value"
        ]
      },
      "PackageDownloadUri": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context URL"
          },
          "value": {
            "type": "string",
            "format": "uri",
            "description": "SAS URI for downloading the investigation package (valid for short time only)"
          }
        },
        "required": [
          "value"
        ]
      },
      "FileStatistics": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context URL"
          },
          "sha1": {
            "type": "string",
            "description": "SHA1 hash of the file"
          },
          "organizationPrevalence": {
            "type": "integer",
            "description": "Number of devices in the organization that have observed this file"
          },
          "orgFirstSeen": {
            "type": "string",
            "format": "date-time",
            "description": "First time this file was observed in the organization"
          },
          "orgLastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Last time this file was observed in the organization"
          }
        }
      },
      "Vulnerability": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Vulnerability identifier (CVE ID)"
          },
          "name": {
            "type": "string",
            "description": "Vulnerability name"
          },
          "description": {
            "type": "string",
            "description": "Detailed vulnerability description"
          },
          "severity": {
            "type": "string",
            "enum": [
              "Low",
              "Medium",
              "High",
              "Critical"
            ],
            "description": "Vulnerability severity level"
          },
          "cvssV3": {
            "type": "number",
            "minimum": 0,
            "maximum": 10,
            "description": "CVSS v3 base score"
          },
          "cvssVector": {
            "type": "string",
            "description": "CVSS v3 vector string"
          },
          "exposedMachines": {
            "type": "integer",
            "description": "Number of exposed machines in the organization"
          },
          "publishedOn": {
            "type": "string",
            "format": "date-time",
            "description": "Date when vulnerability was published"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time",
            "description": "Date when vulnerability was last updated"
          },
          "firstDetected": {
            "type": "string",
            "format": "date-time",
            "description": "Date when vulnerability was first detected in organization"
          },
          "publicExploit": {
            "type": "boolean",
            "description": "Whether public exploit exists"
          },
          "exploitVerified": {
            "type": "boolean",
            "description": "Whether exploit has been verified"
          },
          "exploitInKit": {
            "type": "boolean",
            "description": "Whether exploit is available in exploit kits"
          },
          "exploitTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Types of exploits available"
          },
          "exploitUris": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "URIs to exploit information"
          },
          "cveSupportability": {
            "type": "string",
            "description": "Microsoft supportability status"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Vulnerability tags"
          },
          "epss": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "Exploit Prediction Scoring System (EPSS) score"
          }
        }
      },
      "VulnerabilityCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Vulnerability"
                }
              }
            }
          }
        ]
      },
      "MachineReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Machine identifier"
          },
          "computerDnsName": {
            "type": "string",
            "description": "Computer DNS name"
          },
          "osPlatform": {
            "type": "string",
            "description": "Operating system platform"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "RBAC group name"
          }
        }
      },
      "MachineReferenceCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MachineReference"
                }
              }
            }
          }
        ]
      },
      "MachineVulnerability": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the machine-vulnerability combination"
          },
          "cveId": {
            "type": "string",
            "description": "CVE identifier"
          },
          "machineId": {
            "type": "string",
            "description": "Machine identifier"
          },
          "fixingKbId": {
            "type": "string",
            "nullable": true,
            "description": "Knowledge Base article ID for fixing the vulnerability"
          },
          "productName": {
            "type": "string",
            "description": "Name of the affected product"
          },
          "productVendor": {
            "type": "string",
            "description": "Vendor of the affected product"
          },
          "productVersion": {
            "type": "string",
            "description": "Version of the affected product"
          },
          "severity": {
            "type": "string",
            "enum": [
              "Low",
              "Medium",
              "High",
              "Critical"
            ],
            "description": "Vulnerability severity level"
          }
        }
      },
      "MachineVulnerabilityCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MachineVulnerability"
                }
              }
            }
          }
        ]
      },
      "DomainStatistics": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context URL"
          },
          "host": {
            "type": "string",
            "description": "Domain name"
          },
          "organizationPrevalence": {
            "type": "integer",
            "description": "Number of devices in the organization that have communicated with this domain"
          },
          "orgFirstSeen": {
            "type": "string",
            "format": "date-time",
            "description": "First time this domain was observed in the organization"
          },
          "orgLastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Last time this domain was observed in the organization"
          }
        }
      },
      "IPStatistics": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context URL"
          },
          "ipAddress": {
            "type": "string",
            "format": "ipv4",
            "description": "IP address"
          },
          "organizationPrevalence": {
            "type": "integer",
            "description": "Distinct count of devices in the organization that opened network connection to this IP"
          },
          "orgFirstSeen": {
            "type": "string",
            "format": "date-time",
            "description": "First time this IP was observed in the organization"
          },
          "orgLastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Last time this IP was observed in the organization"
          }
        }
      },
      "Software": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context URL"
          },
          "id": {
            "type": "string",
            "description": "Software identifier (usually vendor-_-product format)"
          },
          "name": {
            "type": "string",
            "description": "Software name"
          },
          "vendor": {
            "type": "string",
            "description": "Software vendor"
          },
          "weaknesses": {
            "type": "integer",
            "description": "Number of vulnerabilities affecting this software"
          },
          "publicExploit": {
            "type": "boolean",
            "description": "Whether public exploits exist for vulnerabilities in this software"
          },
          "activeAlert": {
            "type": "boolean",
            "description": "Whether there are active alerts related to this software"
          },
          "exposedMachines": {
            "type": "integer",
            "description": "Number of devices with this software installed"
          },
          "impactScore": {
            "type": "number",
            "description": "Calculated impact score based on vulnerabilities and exposure"
          }
        }
      },
      "SoftwareCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Software"
                }
              }
            }
          }
        ]
      },
      "AdvancedQueryRequest": {
        "type": "object",
        "required": [
          "Query"
        ],
        "properties": {
          "Query": {
            "type": "string",
            "description": "KQL (Kusto Query Language) query string to execute",
            "example": "DeviceProcessEvents | where InitiatingProcessFileName =~ 'powershell.exe' | where ProcessCommandLine contains 'appdata' | project Timestamp, FileName, InitiatingProcessFileName, DeviceId | limit 2"
          }
        }
      },
      "AdvancedQueryResponse": {
        "type": "object",
        "properties": {
          "Schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuerySchemaColumn"
            },
            "description": "Schema definition for the query results"
          },
          "Results": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            },
            "description": "Query result rows (max 100,000 rows)"
          }
        }
      },
      "QuerySchemaColumn": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Column name"
          },
          "Type": {
            "type": "string",
            "description": "Column data type",
            "enum": [
              "String",
              "DateTime",
              "Int32",
              "Int64",
              "Boolean",
              "Double",
              "Dynamic"
            ]
          }
        }
      },
      "CertificateAssessment": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device identifier"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name"
          },
          "thumbprint": {
            "type": "string",
            "description": "Certificate thumbprint"
          },
          "path": {
            "type": "string",
            "description": "Certificate path location"
          },
          "signatureAlgorithm": {
            "type": "string",
            "description": "Certificate signature algorithm"
          },
          "serialNumber": {
            "type": "string",
            "description": "Certificate serial number"
          },
          "rbacGroupId": {
            "type": "integer",
            "description": "RBAC group identifier"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "RBAC group name"
          }
        }
      },
      "CertificateAssessmentCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CertificateAssessment"
                }
              }
            }
          }
        ]
      },
      "ExportFilesResponse": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context URL"
          },
          "exportFiles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Array of download URLs for export files"
          },
          "generatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when export files were generated"
          }
        }
      },
      "BaselineComplianceAssessment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Assessment identifier"
          },
          "configurationId": {
            "type": "string",
            "description": "Configuration identifier"
          },
          "deviceId": {
            "type": "string",
            "description": "Device identifier"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name"
          },
          "profileId": {
            "type": "string",
            "description": "Baseline profile identifier"
          },
          "osPlatform": {
            "type": "string",
            "description": "Operating system platform"
          },
          "osVersion": {
            "type": "string",
            "description": "Operating system version"
          },
          "rbacGroupId": {
            "type": "integer",
            "description": "RBAC group identifier"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "RBAC group name"
          },
          "isApplicable": {
            "type": "boolean",
            "description": "Whether the configuration is applicable to this device"
          },
          "isCompliant": {
            "type": "boolean",
            "description": "Whether the device is compliant with this configuration"
          },
          "dataCollectionTimeOffset": {
            "type": "string",
            "format": "date-time",
            "description": "When the compliance data was collected"
          },
          "recommendedValue": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Recommended configuration values"
          },
          "currentValue": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Current configuration values"
          },
          "source": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Configuration source information"
          }
        }
      },
      "BaselineComplianceAssessmentCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BaselineComplianceAssessment"
                }
              }
            }
          }
        ]
      },
      "SecureConfigurationAssessment": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device identifier"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "RBAC group name"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name"
          },
          "osPlatform": {
            "type": "string",
            "description": "Operating system platform"
          },
          "osVersion": {
            "type": "string",
            "description": "Operating system version"
          },
          "timestamp": {
            "type": "string",
            "description": "Assessment timestamp"
          },
          "configurationId": {
            "type": "string",
            "description": "Configuration identifier"
          },
          "configurationCategory": {
            "type": "string",
            "description": "Configuration category (Application, OS, Network, Accounts, Security controls)"
          },
          "configurationSubcategory": {
            "type": "string",
            "description": "Configuration subcategory"
          },
          "configurationImpact": {
            "type": "integer",
            "description": "Configuration impact score"
          },
          "isCompliant": {
            "type": "boolean",
            "description": "Whether the device is compliant with this configuration"
          },
          "isApplicable": {
            "type": "boolean",
            "description": "Whether this configuration is applicable to the device"
          },
          "isExpectedUserImpact": {
            "type": "boolean",
            "description": "Whether user impact is expected from this configuration"
          },
          "configurationName": {
            "type": "string",
            "description": "Human-readable configuration name"
          },
          "recommendationReference": {
            "type": "string",
            "description": "Reference to related security recommendation"
          }
        }
      },
      "SecureConfigurationAssessmentCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SecureConfigurationAssessment"
                }
              }
            }
          }
        ]
      },
      "SoftwareVulnerabilityAssessment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the vulnerability assessment record"
          },
          "deviceId": {
            "type": "string",
            "description": "Device identifier"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "RBAC group name"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name"
          },
          "osPlatform": {
            "type": "string",
            "description": "Operating system platform"
          },
          "osVersion": {
            "type": "string",
            "description": "Operating system version"
          },
          "osArchitecture": {
            "type": "string",
            "description": "Operating system architecture"
          },
          "softwareVendor": {
            "type": "string",
            "description": "Software vendor name"
          },
          "softwareName": {
            "type": "string",
            "description": "Software name"
          },
          "softwareVersion": {
            "type": "string",
            "description": "Software version"
          },
          "cveId": {
            "type": "string",
            "description": "CVE identifier"
          },
          "vulnerabilitySeverityLevel": {
            "type": "string",
            "enum": [
              "Critical",
              "High",
              "Medium",
              "Low",
              "Informational"
            ],
            "description": "Vulnerability severity level"
          },
          "recommendedSecurityUpdate": {
            "type": "string",
            "description": "Recommended security update"
          },
          "recommendedSecurityUpdateId": {
            "type": "string",
            "description": "Recommended security update identifier"
          },
          "diskPaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Disk paths where software is installed"
          },
          "registryPaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Registry paths for the software"
          },
          "lastSeenTimestamp": {
            "type": "string",
            "description": "Last seen timestamp"
          },
          "firstSeenTimestamp": {
            "type": "string",
            "description": "First seen timestamp"
          },
          "exploitabilityLevel": {
            "type": "string",
            "enum": [
              "NoExploit",
              "ExploitIsPublic",
              "ExploitIsVerified",
              "ExploitIsInKit"
            ],
            "description": "Exploitability level"
          },
          "recommendationReference": {
            "type": "string",
            "description": "Reference to related security recommendation"
          },
          "securityUpdateAvailable": {
            "type": "boolean",
            "description": "Whether a security update is available"
          }
        }
      },
      "SoftwareVulnerabilityAssessmentCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SoftwareVulnerabilityAssessment"
                }
              }
            }
          }
        ]
      },
      "SoftwareVulnerabilityChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the vulnerability change record"
          },
          "deviceId": {
            "type": "string",
            "description": "Device identifier"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "RBAC group name"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name"
          },
          "osPlatform": {
            "type": "string",
            "description": "Operating system platform"
          },
          "softwareVendor": {
            "type": "string",
            "description": "Software vendor name"
          },
          "softwareName": {
            "type": "string",
            "description": "Software name"
          },
          "softwareVersion": {
            "type": "string",
            "description": "Software version"
          },
          "cveId": {
            "type": "string",
            "description": "CVE identifier"
          },
          "vulnerabilitySeverityLevel": {
            "type": "string",
            "enum": [
              "Critical",
              "High",
              "Medium",
              "Low",
              "Informational"
            ],
            "description": "Vulnerability severity level"
          },
          "exploitabilityLevel": {
            "type": "string",
            "enum": [
              "NoExploit",
              "ExploitIsPublic",
              "ExploitIsVerified",
              "ExploitIsInKit"
            ],
            "description": "Exploitability level"
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "Fixed",
              "Updated"
            ],
            "description": "Change status"
          },
          "eventTimestamp": {
            "type": "string",
            "description": "When the delta event was found"
          },
          "firstSeenTimestamp": {
            "type": "string",
            "description": "First seen timestamp"
          },
          "lastSeenTimestamp": {
            "type": "string",
            "description": "Last seen timestamp"
          }
        }
      },
      "SoftwareVulnerabilityChangesCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SoftwareVulnerabilityChange"
                }
              }
            }
          }
        ]
      },
      "NonCpeSoftwareInventory": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device identifier"
          },
          "rbacGroupId": {
            "type": "integer",
            "description": "RBAC group identifier"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "RBAC group name"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name"
          },
          "osPlatform": {
            "type": "string",
            "description": "Operating system platform"
          },
          "softwareVendor": {
            "type": "string",
            "description": "Software vendor name"
          },
          "softwareName": {
            "type": "string",
            "description": "Software name"
          },
          "softwareVersion": {
            "type": "string",
            "description": "Software version"
          },
          "softwareLastSeenTimestamp": {
            "type": "string",
            "description": "Last seen timestamp for the software"
          }
        }
      },
      "NonCpeSoftwareInventoryCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NonCpeSoftwareInventory"
                }
              }
            }
          }
        ]
      },
      "SoftwareInventory": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device identifier"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "RBAC group name"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name"
          },
          "osPlatform": {
            "type": "string",
            "description": "Operating system platform"
          },
          "softwareVendor": {
            "type": "string",
            "description": "Software vendor name"
          },
          "softwareName": {
            "type": "string",
            "description": "Software name"
          },
          "softwareVersion": {
            "type": "string",
            "description": "Software version"
          },
          "numberOfWeaknesses": {
            "type": "integer",
            "description": "Number of vulnerabilities found in this software"
          },
          "diskPaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Disk paths where software is installed"
          },
          "registryPaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Registry paths for the software"
          },
          "softwareFirstSeenTimestamp": {
            "type": "string",
            "description": "First seen timestamp for the software"
          },
          "endOfSupportStatus": {
            "type": "string",
            "description": "End of support status"
          },
          "endOfSupportDate": {
            "type": "string",
            "format": "date-time",
            "description": "End of support date"
          }
        }
      },
      "SoftwareInventoryCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SoftwareInventory"
                }
              }
            }
          }
        ]
      },
      "ScanDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Scan definition identifier"
          },
          "scanName": {
            "type": "string",
            "description": "Name of the scan definition"
          },
          "scanType": {
            "type": "string",
            "enum": [
              "Windows",
              "Network"
            ],
            "description": "Type of scan (Windows or Network)"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Paused"
            ],
            "description": "Current status of the scan definition"
          },
          "targets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Target IP addresses or ranges for scanning"
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "When the scan definition was created"
          },
          "lastModifiedDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "When the scan definition was last modified"
          }
        }
      },
      "ScanDefinitionCollection": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanDefinition"
            }
          }
        }
      },
      "CreateScanDefinitionRequest": {
        "type": "object",
        "required": [
          "scanName",
          "scanType",
          "targets",
          "authenticationParameters"
        ],
        "properties": {
          "scanName": {
            "type": "string",
            "description": "Name for the scan definition"
          },
          "scanType": {
            "type": "string",
            "enum": [
              "Windows",
              "Network"
            ],
            "description": "Type of scan to perform"
          },
          "targets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Target IP addresses or ranges"
          },
          "authenticationParameters": {
            "$ref": "#/components/schemas/AuthenticationParameters"
          },
          "scheduleSettings": {
            "$ref": "#/components/schemas/ScheduleSettings"
          }
        }
      },
      "UpdateScanDefinitionRequest": {
        "type": "object",
        "properties": {
          "scanName": {
            "type": "string",
            "description": "Updated name for the scan definition"
          },
          "targets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Updated target IP addresses or ranges"
          },
          "scheduleSettings": {
            "$ref": "#/components/schemas/ScheduleSettings"
          }
        }
      },
      "AuthenticationParameters": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username for authentication"
          },
          "password": {
            "type": "string",
            "description": "Password for authentication"
          },
          "domain": {
            "type": "string",
            "description": "Domain for authentication (optional)"
          }
        }
      },
      "ScheduleSettings": {
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string",
            "description": "Scan frequency"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Scheduled start time"
          }
        }
      },
      "BatchDeleteScanDefinitionsRequest": {
        "type": "object",
        "required": [
          "scanDefinitionIds"
        ],
        "properties": {
          "scanDefinitionIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of scan definition IDs to delete"
          }
        }
      },
      "BatchDeleteScanDefinitionsResponse": {
        "type": "object",
        "properties": {
          "deletedIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Successfully deleted scan definition IDs"
          },
          "failedIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Failed to delete scan definition IDs"
          }
        }
      },
      "ScanAgent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Scan agent identifier"
          },
          "machineId": {
            "type": "string",
            "description": "Machine identifier where the agent is installed"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time",
            "description": "Last time the agent was seen"
          },
          "computerDnsName": {
            "type": "string",
            "description": "DNS name of the computer"
          },
          "AssignedApplicationId": {
            "type": "string",
            "description": "Assigned application identifier"
          },
          "ScannerSoftwareVersion": {
            "type": "string",
            "description": "Version of the scanner software"
          },
          "LastCommandExecutionTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of last command execution"
          },
          "mdeClientVersion": {
            "type": "string",
            "description": "Microsoft Defender for Endpoint client version"
          }
        }
      },
      "ScanAgentCollection": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context URL"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanAgent"
            }
          }
        }
      },
      "ScanHistory": {
        "type": "object",
        "properties": {
          "scanDefinitionId": {
            "type": "string",
            "description": "Scan definition identifier"
          },
          "scanSessionId": {
            "type": "string",
            "description": "Scan session identifier"
          },
          "scanStartTime": {
            "type": "string",
            "format": "date-time",
            "description": "When the scan started"
          },
          "scanEndTime": {
            "type": "string",
            "format": "date-time",
            "description": "When the scan ended"
          },
          "status": {
            "type": "string",
            "enum": [
              "Completed",
              "Failed",
              "InProgress",
              "Cancelled"
            ],
            "description": "Scan status"
          },
          "results": {
            "type": "object",
            "description": "Scan results data"
          }
        }
      },
      "ScanHistoryCollection": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanHistory"
            }
          }
        }
      },
      "ScanHistorySession": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string",
            "description": "Session identifier"
          },
          "scanDefinitionId": {
            "type": "string",
            "description": "Scan definition identifier"
          },
          "scanStartTime": {
            "type": "string",
            "format": "date-time",
            "description": "When the scan started"
          },
          "scanEndTime": {
            "type": "string",
            "format": "date-time",
            "description": "When the scan ended"
          },
          "status": {
            "type": "string",
            "enum": [
              "Completed",
              "Failed",
              "InProgress",
              "Cancelled"
            ],
            "description": "Scan status"
          },
          "results": {
            "type": "object",
            "description": "Scan results data"
          },
          "machineId": {
            "type": "string",
            "description": "Machine identifier where scan was performed"
          }
        }
      },
      "GetScanHistoryByDefinitionRequest": {
        "type": "object",
        "required": [
          "scanDefinitionIds"
        ],
        "properties": {
          "scanDefinitionIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of scan definition IDs to retrieve history for"
          }
        }
      },
      "GetScanHistoryBySessionRequest": {
        "type": "object",
        "required": [
          "sessionId"
        ],
        "properties": {
          "sessionId": {
            "type": "string",
            "description": "Session ID to retrieve history for"
          }
        }
      },
      "Investigation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Investigation identifier"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Investigation start time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Investigation end time (null if still running)"
          },
          "state": {
            "type": "string",
            "enum": [
              "Running",
              "Completed",
              "Failed",
              "Cancelled"
            ],
            "description": "Investigation state"
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true,
            "description": "User who cancelled the investigation"
          },
          "statusDetails": {
            "type": "string",
            "nullable": true,
            "description": "Additional status details"
          },
          "machineId": {
            "type": "string",
            "description": "Machine identifier where investigation is running"
          },
          "computerDnsName": {
            "type": "string",
            "description": "Computer DNS name"
          },
          "triggeringAlertId": {
            "type": "string",
            "nullable": true,
            "description": "Alert that triggered the investigation"
          }
        }
      },
      "InvestigationCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Investigation"
                }
              }
            }
          }
        ]
      },
      "StartInvestigationRequest": {
        "type": "object",
        "required": [
          "Comment"
        ],
        "properties": {
          "Comment": {
            "type": "string",
            "description": "Comment explaining the reason for starting the investigation"
          }
        }
      },
      "BrowserExtensionInventory": {
        "type": "object",
        "properties": {
          "DeviceId": {
            "type": "string",
            "description": "Device identifier"
          },
          "DeviceName": {
            "type": "string",
            "description": "Device name"
          },
          "RbacGroupId": {
            "type": "integer",
            "description": "RBAC group identifier"
          },
          "RbacGroupName": {
            "type": "string",
            "description": "RBAC group name"
          },
          "InstallationTime": {
            "type": "string",
            "format": "date-time",
            "description": "When the extension was installed"
          },
          "BrowserName": {
            "type": "string",
            "description": "Browser name (chrome, firefox, edge, etc.)"
          },
          "ExtensionId": {
            "type": "string",
            "description": "Extension identifier"
          },
          "ExtensionName": {
            "type": "string",
            "description": "Extension name"
          },
          "ExtensionDescription": {
            "type": "string",
            "description": "Extension description"
          },
          "ExtensionVersion": {
            "type": "string",
            "description": "Extension version"
          },
          "ExtensionRisk": {
            "type": "string",
            "enum": [
              "Low",
              "Medium",
              "High"
            ],
            "description": "Extension risk level"
          },
          "IsActivated": {
            "type": "boolean",
            "description": "Whether the extension is activated"
          },
          "Permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionPermission"
            },
            "description": "Extension permissions"
          }
        }
      },
      "ExtensionPermission": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Permission identifier"
          },
          "IsRequired": {
            "type": "boolean",
            "description": "Whether the permission is required"
          },
          "Risk": {
            "type": "string",
            "enum": [
              "Low",
              "Medium",
              "High"
            ],
            "description": "Permission risk level"
          }
        }
      },
      "BrowserExtensionsInventoryCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BrowserExtensionInventory"
                }
              }
            }
          }
        ]
      },
      "BrowserExtensionPermission": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Permission key identifier"
          },
          "permissionName": {
            "type": "string",
            "description": "Human-readable permission name"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the permission and its security implications"
          }
        }
      },
      "BrowserExtensionPermissionCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BrowserExtensionPermission"
                }
              }
            }
          }
        ]
      },
      "DeviceAntivirusInfo": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device identifier"
          },
          "deviceName": {
            "type": "string",
            "description": "Device name"
          },
          "antivirusStatus": {
            "type": "string",
            "description": "Antivirus status"
          },
          "lastScanTime": {
            "type": "string",
            "format": "date-time",
            "description": "Last antivirus scan time"
          },
          "definitionVersion": {
            "type": "string",
            "description": "Antivirus definition version"
          },
          "engineVersion": {
            "type": "string",
            "description": "Antivirus engine version"
          }
        }
      },
      "DeviceAntivirusInfoCollection": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceAntivirusInfo"
            }
          }
        }
      },
      "ThreatIndicator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Threat indicator identifier"
          },
          "indicatorValue": {
            "type": "string",
            "description": "The indicator value (hash, IP, domain, URL, etc.)"
          },
          "indicatorType": {
            "type": "string",
            "enum": [
              "FileSha1",
              "FileMd5",
              "CertificateThumbprint",
              "FileSha256",
              "IpAddress",
              "DomainName",
              "Url"
            ],
            "description": "Type of the indicator"
          },
          "action": {
            "type": "string",
            "enum": [
              "Alert",
              "Warn",
              "Block",
              "Audit",
              "BlockAndRemediate",
              "AlertAndBlock",
              "Allowed"
            ],
            "description": "Action to take when indicator is detected"
          },
          "application": {
            "type": "string",
            "description": "Application associated with the indicator"
          },
          "source": {
            "type": "string",
            "description": "Source of the indicator"
          },
          "sourceType": {
            "type": "string",
            "enum": [
              "AadApp",
              "User"
            ],
            "description": "Type of source"
          },
          "title": {
            "type": "string",
            "description": "Title of the indicator"
          },
          "creationTimeDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "When the indicator was created"
          },
          "createdBy": {
            "type": "string",
            "description": "Who created the indicator"
          },
          "expirationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the indicator expires"
          },
          "lastUpdateTime": {
            "type": "string",
            "format": "date-time",
            "description": "When the indicator was last updated"
          },
          "lastUpdatedBy": {
            "type": "string",
            "description": "Who last updated the indicator"
          },
          "severity": {
            "type": "string",
            "enum": [
              "Informational",
              "Low",
              "Medium",
              "High"
            ],
            "description": "Severity level of the indicator"
          },
          "description": {
            "type": "string",
            "description": "Description of the indicator"
          },
          "recommendedActions": {
            "type": "string",
            "description": "Recommended actions for the indicator"
          },
          "rbacGroupNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "RBAC group names for targeted application"
          },
          "educateUrl": {
            "type": "string",
            "description": "Education URL for Block and Warn actions on URL indicators"
          },
          "generateAlert": {
            "type": "boolean",
            "description": "Whether to generate alerts for this indicator"
          }
        }
      },
      "ThreatIndicatorCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ThreatIndicator"
                }
              }
            }
          }
        ]
      },
      "CreateThreatIndicatorRequest": {
        "type": "object",
        "required": [
          "indicatorValue",
          "indicatorType",
          "action",
          "title",
          "description"
        ],
        "properties": {
          "indicatorValue": {
            "type": "string",
            "description": "The indicator value (hash, IP, domain, URL, etc.)"
          },
          "indicatorType": {
            "type": "string",
            "enum": [
              "FileSha1",
              "FileMd5",
              "CertificateThumbprint",
              "FileSha256",
              "IpAddress",
              "DomainName",
              "Url"
            ],
            "description": "Type of the indicator"
          },
          "action": {
            "type": "string",
            "enum": [
              "Alert",
              "Warn",
              "Block",
              "Audit",
              "BlockAndRemediate",
              "AlertAndBlock",
              "Allowed"
            ],
            "description": "Action to take when indicator is detected"
          },
          "application": {
            "type": "string",
            "description": "Application associated with the indicator"
          },
          "title": {
            "type": "string",
            "description": "Title of the indicator"
          },
          "description": {
            "type": "string",
            "description": "Description of the indicator"
          },
          "expirationTime": {
            "type": "string",
            "format": "date-time",
            "description": "When the indicator expires"
          },
          "severity": {
            "type": "string",
            "enum": [
              "Informational",
              "Low",
              "Medium",
              "High"
            ],
            "description": "Severity level of the indicator"
          },
          "recommendedActions": {
            "type": "string",
            "description": "Recommended actions for the indicator"
          },
          "rbacGroupNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "RBAC group names for targeted application"
          },
          "educateUrl": {
            "type": "string",
            "description": "Education URL for Block and Warn actions on URL indicators"
          },
          "generateAlert": {
            "type": "boolean",
            "description": "Whether to generate alerts for this indicator"
          }
        }
      },
      "BatchDeleteIndicatorsRequest": {
        "type": "object",
        "required": [
          "indicatorIds"
        ],
        "properties": {
          "indicatorIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 500,
            "description": "Array of indicator IDs to delete (max 500)"
          }
        }
      },
      "BatchDeleteIndicatorsResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchDeleteResult"
            }
          }
        }
      },
      "BatchDeleteResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Indicator ID"
          },
          "indicator": {
            "type": "string",
            "description": "Indicator value"
          },
          "isFailed": {
            "type": "boolean",
            "description": "Whether the deletion failed"
          },
          "failureReason": {
            "type": "string",
            "nullable": true,
            "description": "Reason for failure if applicable"
          }
        }
      },
      "ImportThreatIndicatorsRequest": {
        "type": "object",
        "required": [
          "Indicators"
        ],
        "properties": {
          "Indicators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateThreatIndicatorRequest"
            },
            "maxItems": 500,
            "description": "Array of indicators to import (max 500)"
          }
        }
      },
      "ImportThreatIndicatorsResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportResult"
            }
          }
        }
      },
      "ImportResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Indicator ID"
          },
          "indicator": {
            "type": "string",
            "description": "Indicator value"
          },
          "isFailed": {
            "type": "boolean",
            "description": "Whether the import failed"
          },
          "failureReason": {
            "type": "string",
            "nullable": true,
            "description": "Reason for failure if applicable"
          }
        }
      },
      "LibraryFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Library file identifier"
          },
          "fileName": {
            "type": "string",
            "description": "Name of the file"
          },
          "sha256": {
            "type": "string",
            "description": "SHA256 hash of the file for integrity verification"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Optional description of the file purpose and usage"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "description": "When the file was uploaded"
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "When the file was last updated"
          },
          "createdBy": {
            "type": "string",
            "description": "Who uploaded the file"
          },
          "hasParameters": {
            "type": "boolean",
            "description": "Whether the script/file requires parameters"
          },
          "parametersDescription": {
            "type": "string",
            "nullable": true,
            "description": "Description of parameters required for script execution"
          },
          "size": {
            "type": "integer",
            "description": "File size in bytes"
          }
        }
      },
      "LibraryFileCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LibraryFile"
                }
              }
            }
          }
        ]
      },
      "UploadLibraryFileRequest": {
        "type": "object",
        "required": [
          "file"
        ],
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File content to upload (max 20MB)"
          },
          "Description": {
            "type": "string",
            "description": "Optional description of the file purpose and usage"
          },
          "ParametersDescription": {
            "type": "string",
            "description": "Description of parameters required for script execution"
          },
          "OverrideIfExists": {
            "type": "boolean",
            "description": "Set to true to replace existing files with same name"
          }
        }
      },
      "RemediationActivity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Remediation activity identifier"
          },
          "title": {
            "type": "string",
            "description": "Title of the remediation activity"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "description": "When the remediation activity was created"
          },
          "requesterId": {
            "type": "string",
            "description": "ID of the user who requested the remediation"
          },
          "requesterEmail": {
            "type": "string",
            "description": "Email of the user who requested the remediation"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Completed",
              "Cancelled",
              "Failed"
            ],
            "description": "Current status of the remediation activity"
          },
          "statusLastModifiedOn": {
            "type": "string",
            "format": "date-time",
            "description": "When the status was last modified"
          },
          "description": {
            "type": "string",
            "description": "Description of the remediation activity"
          },
          "relatedComponent": {
            "type": "string",
            "description": "Related component (software, configuration, etc.)"
          },
          "targetDevices": {
            "type": "integer",
            "description": "Number of target devices"
          },
          "fixedDevices": {
            "type": "integer",
            "description": "Number of devices already fixed"
          },
          "dueOn": {
            "type": "string",
            "format": "date-time",
            "description": "Due date for the remediation"
          },
          "category": {
            "type": "string",
            "enum": [
              "Software",
              "Configuration",
              "Security"
            ],
            "description": "Category of the remediation"
          },
          "priority": {
            "type": "string",
            "enum": [
              "Low",
              "Medium",
              "High",
              "Critical"
            ],
            "description": "Priority level of the remediation"
          },
          "type": {
            "type": "string",
            "enum": [
              "Update",
              "Uninstall",
              "Configuration"
            ],
            "description": "Type of remediation action"
          },
          "productId": {
            "type": "string",
            "description": "Product identifier"
          },
          "vendorId": {
            "type": "string",
            "description": "Vendor identifier"
          }
        }
      },
      "RemediationActivityCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RemediationActivity"
                }
              }
            }
          }
        ]
      },
      "ConfigurationScore": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context URL"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the score was calculated"
          },
          "score": {
            "type": "number",
            "description": "Microsoft Secure Score for Devices (higher is better)"
          }
        }
      },
      "ExposureScore": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context URL"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the score was calculated"
          },
          "score": {
            "type": "number",
            "description": "Organizational exposure score (lower is better)"
          }
        }
      },
      "ExposureScoreByGroup": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the score was calculated"
          },
          "score": {
            "type": "number",
            "description": "Exposure score for the device group (lower is better)"
          },
          "rbacGroupName": {
            "type": "string",
            "description": "RBAC group name"
          }
        }
      },
      "ExposureScoreByGroupCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExposureScoreByGroup"
                }
              }
            }
          }
        ]
      },
      "BaselineProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Baseline profile identifier"
          },
          "name": {
            "type": "string",
            "description": "Baseline profile name"
          },
          "description": {
            "type": "string",
            "description": "Baseline profile description"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the baseline profile is active"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "description": "When the baseline profile was created"
          },
          "lastModifiedOn": {
            "type": "string",
            "format": "date-time",
            "description": "When the baseline profile was last modified"
          },
          "configurationCount": {
            "type": "integer",
            "description": "Number of configurations in the profile"
          }
        }
      },
      "BaselineProfileCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BaselineProfile"
                }
              }
            }
          }
        ]
      },
      "BaselineConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Configuration identifier"
          },
          "name": {
            "type": "string",
            "description": "Configuration name"
          },
          "description": {
            "type": "string",
            "description": "Configuration description"
          },
          "profileId": {
            "type": "string",
            "description": "Associated baseline profile ID"
          },
          "profileName": {
            "type": "string",
            "description": "Associated baseline profile name"
          },
          "category": {
            "type": "string",
            "description": "Configuration category"
          },
          "severity": {
            "type": "string",
            "enum": [
              "Low",
              "Medium",
              "High",
              "Critical"
            ],
            "description": "Configuration severity level"
          },
          "isCompliant": {
            "type": "boolean",
            "description": "Whether the configuration is compliant"
          }
        }
      },
      "BaselineConfigurationCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BaselineConfiguration"
                }
              }
            }
          }
        ]
      },
      "SoftwareDistribution": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Software version"
          },
          "installations": {
            "type": "integer",
            "description": "Number of installations of this version"
          },
          "vulnerabilities": {
            "type": "integer",
            "description": "Number of vulnerabilities in this version"
          }
        }
      },
      "SoftwareDistributionCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataResponse"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SoftwareDistribution"
                }
              }
            }
          }
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Error code"
              },
              "message": {
                "type": "string",
                "description": "Error message"
              }
            }
          }
        }
      },
      "ODataResponse": {
        "type": "object",
        "properties": {
          "@odata.context": {
            "type": "string",
            "description": "OData context URL"
          },
          "@odata.count": {
            "type": "integer",
            "description": "Total count of items"
          },
          "@odata.nextLink": {
            "type": "string",
            "description": "URL for next page of results"
          }
        }
      }
    }
  }
}
